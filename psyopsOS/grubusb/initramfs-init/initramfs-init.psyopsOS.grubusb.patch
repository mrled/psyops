--- initramfs-init.orig	2023-12-03 13:20:35
+++ initramfs-init.patched.grubusb	2023-12-03 17:50:11
@@ -1,4 +1,6 @@
 #!/bin/sh
+
+set -x
 
 # this is the init script version
 VERSION=3.8.1-r0
@@ -389,6 +391,11 @@
 		switch_root_opts="-c /dev/${opt%%,*}"
 		continue
 		;;
+	# Specially handle psyopsos= kernel option, which makes for a cleaner patch
+	psyopsos=*)
+		KOPT_psyopsos="${opt#*=}"
+		continue
+		;;
 	esac
 
 	for i in $myopts; do
@@ -530,6 +537,38 @@
 	setup_nbd || echo "Failed to setup nbd device."
 fi
 
+if [ -n "$KOPT_psyopsos" ]; then
+	ebegin "Configuring for psyopsOS"
+
+	# We have to run nlplug-findfs in order to coldplug all the block devices which might have our partitions on them.
+	nlplug-findfs
+
+	# This is just nice to have when troubleshooting initrd
+	mkdir -p /efisys /a /b
+	echo "LABEL=PSYOPSOSEFI /efisys vfat ro 0 0" >> /etc/fstab
+	echo "LABEL=psyopsOS-A /a ext4 ro 0 0" >> /etc/fstab
+	echo "LABEL=psyopsOS-B /b ext4 ro 0 0" >> /etc/fstab
+
+	# In squashfs-based psyopsOS, the partition we're booting from is passed as psyopsos=LABEL.
+	psyopsOS_boot_device=$(findfs LABEL="$KOPT_psyopsos")
+	if [ $? != 0 ]; then eend 1 "Failed to find psyopsOS boot device with label $KOPT_psyopsos"; fi
+	mkdir -p $sysroot/boot
+	$MOCK mount -t ext4 -o ro $psyopsOS_boot_device $sysroot/boot
+	if [ $? != 0 ]; then eend 1 "Failed to mount psyopsOS boot device with label $KOPT_psyopsos to path $sysroot/boot"; fi
+
+	KOPT_rootfstype="squashfs"
+
+	# Allow original script to mount the squashfs
+	if [ -z $KOPT_rootflags ]; then
+		KOPT_rootflags="loop"
+	else
+		case "$KOPT_rootflags" in *loop*) ;; *) KOPT_rootflags="$KOPT_rootflags,loop" ;; esac
+	fi
+	KOPT_root="$sysroot/boot/squashfs"
+
+	eend 0
+fi
+
 # zpool reports /dev/zfs missing if it can't read /etc/mtab
 ln -s /proc/mounts "$ROOT"/etc/mtab
 
