#!/bin/sh
set -eu

rundate="$(date +%Y%m%d-%H%M%S)"
# Log all stdout and stderr to a file in /var/log
exec >"/var/log/postboot.$rundate"
exec 2>&1

ln -sf /var/log/postboot.$rundate /var/log/postboot.latest

# Make a logger function that also logs to the serial port
# Useful if we cannot log in after boot when debugging
logyell() {
	echo "$@" || true
	prefixedmsg="psyopsOS postboot logyell: $@"
	logger -t postboot "$prefixedmsg" || true
	echo "$prefixedmsg" > /dev/ttyS0 || true
}

if test -e /etc/psyopsOS/status/000-postboot.finished; then
	logyell "psyopsOS postboot has already run once, nothing to do"
	exit 0
fi

dying_breath() {
	_exitcode="$1"
	_line="$2"
	logyell "Script exiting with error $_exitcode on line $_line"
}
trap 'dying_breath $? $LINENO' ERR

setup-keymap us us

# Mount the psyops-secret volume
if ! /usr/local/sbin/psyopsOS-mount-secret.sh; then
	logyell "psyops-secret volume did not mount properly. Will attempt to configure DHCP network, and then exit."
	# If psyops-secret doesn't mount, try to configure automatically.
	# On systems with a single network adapter on a DHCP network, this will work.
	# Unfortunately, it detects wlan interfaces too, which will probably never work w/o configuration (password etc),
	# so if the machine has a wifi interface, this will probably not be useful.
	setup-interfaces -r -a || logyell "Failed to configure DHCP"
	exit 1
fi

. /etc/psyopsOS/psyops-secret.env
setup-hostname "$PSYOPSOS_NODENAME"

# We try to keep going even if the secrets volume doesn't have all the files we expect.
# Sometimes we boot a system, configure the bare minumim, and then move it to its final location,
# where we can complete the secrets volume configuration.

if test -e "$PSYOPSOS_MACTAB"; then
	install -o root -g root -m 0644 "$PSYOPSOS_MACTAB" /etc/mactab
fi

if test -e "$PSYOPSOS_SSHD_ED25519_KEY"; then
	install -o root -g root -m 0600 "$PSYOPSOS_SSHD_ED25519_KEY" /etc/ssh/ssh_host_ed25519_key
	ssh-keygen -y -f /etc/ssh/ssh_host_ed25519_key > /etc/ssh/ssh_host_ed25519_key.pub
	chown root:root /etc/ssh/ssh_host_ed25519_key.pub
	chmod 0644 /etc/ssh/ssh_host_ed25519_key.pub
fi

if test -e "$PSYOPSOS_INTERFACES"; then
	setup-interfaces -i < "$PSYOPSOS_INTERFACES"
fi


# We want to 'rc-service hostname restart',
# but that (sometimes?) causes syslog to restart,
# and that sometimes has errors like
#     * Call to flock failed: Resource temporarily unavailable
#     * ERROR: networking stopped by something else
# So instead we do them separately and that doesn't seem to trigger that?
# I also switch to not having THIS script log to syslog,
# maybe that is helping too?
# idk man
hostname -F /etc/hostname
rc-service syslog restart

rc-service networking stop
nameif -s
rc-service networking start
rc-service ntpd start
rc-service sshd restart
echo "Finished configuring network, mactab, ssh, etc"

alpine_release=$(cat /etc/alpine-release)
alpine_release_majmin=${alpine_release%.*}

progfig_old="$(apk list -I progfiguration_blacksite)"
echo "Preinstalled version of progfigsite: $progfig_old"
psyopsos_repo="https://psyops.micahrl.com/apk/v$alpine_release_majmin/psyopsOS"
if ! grep -q "$psyopsos_repo" /etc/apk/repositories; then
	echo "Adding psyopsOS repo to apk"
	echo "$psyopsos_repo" >> /etc/apk/repositories
else
	echo "psyopsOS repo already in apk"
fi
echo "Upgrading progfigsite..."
apk upgrade progfiguration_blacksite
progfig_new="$(apk list -I progfiguration_blacksite)"
echo "Version of progfigsite after running 'apk upgrade': $progfig_new"

# TODO: log the entire progfigsite run to a file in /var/log

echo "Starting progfiguration-blacksite asynchronously, will continue in background..."
progfiguration-blacksite --syslog-exception apply "$PSYOPSOS_NODENAME" &

date +'%Y%m%d-%H%M%S %z' > /etc/psyopsOS/status/000-postboot.finished
echo "Finished postboot"
