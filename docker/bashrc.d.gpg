#!/bin/sh

importkey="$HOME/.psyops.secret.key.asc"
keyid=12E8CEC69AD7651DF8A97766EDD94B830D6F7ED9

gpgpassfile="$HOME/.gpg.passphrase"

testgpgpass() {
    if echo "MESSAGE" | gpg --batch --pinentry-mode loopback --sign --passphrase-file "$gpgpassfile"; then
        return 0
    fi
        return 1
}

testkeyimported() {
    if gpg --list-secret-keys | grep -q "$keyid"; then
        return 0
    fi
    return 1
}

gpgsavepassfile() {
    stty -echo
    printf "Enter passphrase for psyops key (id $keyid): "
    read -r passphrase
    stty echo
    printf "$passphrase" > "$gpgpassfile"
}

gpggetpass() {
    cat "$gpgpassfile"
}

gpgimportkey() {
    # It asks for the a passphrase on import, but it doesn't actually appear to use it? It will import a key with a bad passphrase...?
    passphrase="DUMMY"
    echo "$passphrase" | PASSPHRASE="$passphrase" gpg --batch --pinentry-mode loopback --command-fd 0 --status-fd 2 --import "$importkey"
}

# Will do nothing if the key already exists
gpgimportkey

while ! testgpgpass; do
    rm "$gpgpassfile" 2>/dev/null || true
    gpgsavepassfile
fi
