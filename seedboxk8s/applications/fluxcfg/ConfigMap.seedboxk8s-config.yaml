apiVersion: v1
kind: ConfigMap
metadata:
  name: seedboxk8s-config
  namespace: flux-system

data:

  # I am not impressed with the way Flux and/or Kustomize handles ConfigMaps.
  # Here are some examples for our edification.
  # Flux has its own Kustomization type kustomization.kustomize.toolkit.fluxcd.io.
  # <https://fluxcd.io/flux/faq/#are-there-two-kustomization-types>
  # It can do neat things like substitute values from ConfigMaps with postBuild.substituteFrom.
  #
  # This is a string, like normal YAML. Great.
  # exampleStr: asdf
  # This is INVALID. Kustomize requires all values in this file to be strings.
  # exampleIntINVALID: 123
  # Instead, you must make it a string:
  # exampleIntValid: "123"
  #
  # In a manifest like a Deployment, if this ConfigMap is referenced in a postBuild.substituteFrom,
  # you can reference the above values like this:
  # - name: EXAMPLE_STR
  #   value: ${exampleStr}
  #
  # However, Flux substitutes strings from a ConfigMap like this one, it effectively unquotes any value.
  # This means that if you do this:
  # - name: EXAMPLE_INT
  #   value: ${exampleIntValid}
  # It will end up looking like this:
  # - name: EXAMPLE_INT
  #   value: 123
  # That is -- it is now a NUMBER. Its type has changed.
  # It doesn't matter if you quote the token like this:
  # - name: EXAMPLE_INT
  #   value: "${exampleIntValid}"
  # EVEN THAT will STILL end up looking like this:
  # - name: EXAMPLE_INT
  #   value: 123
  # !!!!!!!!!!!!LAKSJDLKSADJF
  #
  # For things that are still strings if the quotes are removed, like exampleStr above, this is fine.
  # But for things that are another type if the quotes are removed, like exampleIntValid above,
  # this can be a problem.
  # Because what if you need to force a value to be a string?
  #
  # There's another piece of this puzzle, which is that Kubernetes will validate manifests by type.
  # It is very bad at this job, because most things are strings,
  # and because it uses YAML which is very bad at this job.
  # But it still tries.
  # And one thing it knows is that environment variables are always strings.
  # So if you are trying to pass a number to a container as an environment variable,
  # you have to DOUBLE QUOTE IT HERE IN THE CONFIG MAP.
  # <https://github.com/kubernetes-sigs/kustomize/issues/5558>
  # ...
  # <a horrible scream>
  #
  # That looks like this:
  # exampleStringContainingNumbers: '"123"'
  # Of course, you might ALSO need it as a number in other contexts,
  # so you might ALSO need to do this:
  # exampleInt: "123"
  #
  # Instead, you could keep track of it just one way:
  # exampleInt: "123"
  # And then also provide a stupid quote as a variable:
  # quote: '"'
  # And then use it like this:
  # exampleStringContainingNumbers: ${quote}${exampleInt}${quote}
  # NO I AM NOT FUCKING KIDDING.
  quote: '"'

  clusterPrimaryIp: "100.86.119.112"
  nodeLocalSlowStorageRoot: /seedboxmedia/seedboxk8s

  # The primary DNS name for services advertized on the local network (outside of Tailscale)
  clusterLocalnetPrimaryFqdn: tagasaw.home.micahrl.com

  dexClientId: SeedboxK8sDexClientAuth-younix.us

  timezone: America/Chicago

  plexUid: "989"
  plexGid: "986"

  # We use this to test IngressRouteTCP
  whoamiHttpTcpPort: "10080"

  # Exposed as an IngressRouteTCP
  transmissionPeerPort: "10298"
