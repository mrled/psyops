apiVersion: apps/v1
kind: DaemonSet
metadata:
  name: traefik-localnet
  namespace: traefik
spec:
  selector:
    matchLabels:
      name: traefik-localnet
  template:
    metadata:
      labels:
        name: traefik-localnet
    spec:
      serviceAccountName: traefik-account
      containers:
      - name: traefik-localnet
        image: traefik:v3.0
        args:
          - --api.insecure=true
          - --api.dashboard=true
          - --log.level=DEBUG
          - --accesslog=true

          - --entrypoints.admin.Address=:18080
          - --entrypoints.torrent-tcp.Address=:${transmissionPeerPort}
          - --entrypoints.torrent-udp.Address=:${transmissionPeerPort}/udp
          - --entrypoints.whoami-http-tcp.Address=:${whoamiHttpTcpPort}
          - --entrypoints.plex32400.address=:32400
          - --entrypoints.plex64800.address=:64800

          - --providers.kubernetescrd
          - --providers.kubernetescrd.allowCrossNamespace=true
          # Only watch for Ingresses with the ingress class "traefik-localnet"
          - --providers.kubernetescrd.ingressclass=traefik-localnet
        ports:
        - name: torrent-tcp
          containerPort: ${transmissionPeerPort}
          hostPort: ${transmissionPeerPort}
          protocol: TCP
        - name: torrent-udp
          containerPort: ${transmissionPeerPort}
          hostPort: ${transmissionPeerPort}
          protocol: UDP
        - name: whoami-http-tcp
          containerPort: ${whoamiHttpTcpPort}
          hostPort: ${whoamiHttpTcpPort}
          protocol: TCP
        - name: plex32400
          containerPort: 32400
          hostPort: 32400
          protocol: TCP
        - name: plex64800
          containerPort: 64800
          hostPort: 64800
          protocol: TCP
        # Do not expose hostPort for this one
        - name: traefik-admin
          containerPort: 18080
          protocol: TCP


# TODO: expose the dashboard here, make a service for it, and make an ingressroute on the OTHER traefik controller that talks so the service.
# Might need to make a load balancer for localnet, move this localnet traefik instance to a Deployment, point the load balancer to the localnet traefik deployment, so that the deployment can expose the admin dashboard internally to the service.