apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: registry
  namespace: registry
  labels:
    app: registry
  annotations:
    reloader.stakater.com/auto: "true"
spec:
  replicas: 1
  serviceName: registry
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      initContainers:
        - name: import-data
          image: busybox
          command: ["sh", "/data-import-helper/import-data.sh"]
          volumeMounts:
            - name: data-import-helper
              mountPath: /data-import-helper
            - name: image-store-lvm
              mountPath: /config
            - name: import
              mountPath: /import
      containers:
        - name: registry
          image: registry:2
          env:
            - name: REGISTRY_AUTH
              value: "token"
            - name: REGISTRY_AUTH_TOKEN_REALM
              value: "https://registry.${productionClusterFqdn}/auth"
            # An arbitrary name we send to docker_auth;
            # its ACLs may be configured to allow or deny access to this service in auth_config.yml
            - name: REGISTRY_AUTH_TOKEN_SERVICE
              value: "registry.${productionClusterFqdn}"
            # Should match the issuer in the auth_config.yml file
            - name: REGISTRY_AUTH_TOKEN_ISSUER
              value: "Seedbox K8s Registry Auth"
            # The certificate for the auth service token generation;
            # we happen to have self signed this but that is OK
            - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
              value: /etc/docker-auth-cert/tls.crt
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: registry-secret
                  key: httpSecret
            - name: REGISTRY_LOG_LEVEL
              value: "debug"
            - name: REGISTRY_LOG_ACCESSLOG_DISABLED
              value: "false"
          ports:
            - containerPort: 5000
          volumeMounts:
            - name: docker-auth-cert
              mountPath: /etc/docker-auth-cert
            - name: image-store-lvm
              mountPath: /var/lib/registry
      volumes:
        - name: data-import-helper
          configMap:
            name: data-import-helper
        - name: import
          emptyDir: {}
        - name: docker-auth-cert
          secret:
            secretName: docker-auth-cert-backing-secret
        - name: image-store-lvm
          persistentVolumeClaim:
            claimName: registry-lvm-pvc
        - name: registry-config
          configMap:
            name: registry-config
