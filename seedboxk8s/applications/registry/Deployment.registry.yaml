apiVersion: apps/v1
kind: Deployment
metadata:
  name: registry
  namespace: registry
  labels:
    app: registry
spec:
  replicas: 1
  selector:
    matchLabels:
      app: registry
  template:
    metadata:
      labels:
        app: registry
    spec:
      containers:
        - name: registry
          image: registry:2
          env:
            - name: REGISTRY_AUTH
              value: "token"
            - name: REGISTRY_AUTH_TOKEN_REALM
              value: "https://auth.registry.svc.cluster.local/auth"
            # An arbitrary name we send to docker_auth;
            # its ACLs may be configured to allow or deny access to this service in auth_config.yml
            - name: REGISTRY_AUTH_TOKEN_SERVICE
              value: "registry.registry.svc.cluster.local"
            # Should match the issuer in the auth_config.yml file
            - name: REGISTRY_AUTH_TOKEN_ISSUER
              value: "Seedbox K8s Registry Auth"
            # The certificate for the auth service token generation;
            # we happen to have self signed this but that is OK
            - name: REGISTRY_AUTH_TOKEN_ROOTCERTBUNDLE
              value: /etc/docker-auth-cert/tls.crt
            - name: REGISTRY_HTTP_SECRET
              valueFrom:
                secretKeyRef:
                  name: registry-secret
                  key: httpSecret
            - name: REGISTRY_HTTP_TLS_CERTIFICATE
              value: /etc/docker-https-certs/tls.crt
            - name: REGISTRY_HTTP_TLS_KEY
              value: /etc/docker-https-certs/tls.key
            - name: REGISTRY_LOG_LEVEL
              value: "debug"
            - name: REGISTRY_LOG_ACCESSLOG_DISABLED
              value: "false"

          ports:
            - containerPort: 5000

          volumeMounts:
            - name: docker-auth-cert
              mountPath: /etc/docker-auth-cert
            - name: image-store
              mountPath: /var/lib/registry
            - name: https-cert
              mountPath: /etc/docker-https-certs
      volumes:
        - name: docker-auth-cert
          secret:
            secretName: docker-auth-cert-backing-secret
        - name: image-store
          persistentVolumeClaim:
            claimName: registry-pvc
        - name: registry-config
          configMap:
            name: registry-config
        - name: https-cert
          secret:
            secretName: https-registry-backing-secret
