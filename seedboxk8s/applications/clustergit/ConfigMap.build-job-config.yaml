apiVersion: v1
kind: ConfigMap
metadata:
  name: build-job-config
  namespace: clustergit
data:
  gitserver.buildah.sh: |-
    #!/bin/sh
    set -eu

    # Get config vars
    imgns="$CLUSTERGIT_IMAGENAMESPACE"
    imgname="$CLUSTERGIT_IMAGENAME"
    imgtag="$CLUSTERGIT_IMAGETAG"
    regserver="$CLUSTERGIT_REGISTRY"
    reguser="$CLUSTERGIT_REGISTRY_USERNAME"
    regpass="$CLUSTERGIT_REGISTRY_PASSWORD"

    # Log in first
    echo "Logging in to $regserver as $reguser..."
    buildah login --username "$reguser" --password "$regpass" "$regserver"
    echo "Logged in to $regserver as $reguser."

    # No more secrets at this point, show what commands we are running
    set -x

    # Build the image
    container="$(buildah from alpine:3.19)"
    buildah run "$container" -- apk add --no-cache git openssh-server

    buildah run "$container" -- mkdir -p /home/git/.ssh
    buildah run "$container" -- chmod 700 /home/git /home/git/.ssh
    buildah run "$container" -- rm -f /etc/motd
    buildah copy --chmod 755 "$container" /config/entrypoint.sh /usr/local/bin/entrypoint.sh
    buildah config \
      --port 22 \
      --env "GIT_UID=1000" \
      --env "GIT_GID=1000" \
      --cmd "/bin/sh /usr/local/bin/entrypoint.sh" \
      "$container"
    buildah commit "$container" "$imgname"
    buildah tag "$imgname" "$regserver/$imgns/$imgname:$imgtag"
    buildah push "$imgname" "$regserver/$imgns/$imgname:$imgtag"

  entrypoint.sh: |-
    #!/bin/sh
    set -eux

    # Create the git user
    adduser -h /home/git -s /usr/bin/git-shell -D -u "$GIT_UID" -g "$GIT_GID" git

    # Unlock it to allow logins -- when created with -D, the user is created locked,
    # and cannot even use ssh keys to log in.
    sed -i 's/^git:!:/git:\*:/' /etc/shadow

    # Copy authorized_keys from the ConfigMap volume mount
    cp /authorized_keys/authorized_keys /home/git/.ssh/authorized_keys
    # If this file doesn't have the right permissions, sshd will refuse to use it
    chmod 600 /home/git/.ssh/authorized_keys

    # Set correct ownership
    chown git:git /home/git /home/git/.ssh /home/git/.ssh/authorized_keys
    # We don't chown -R because that could take a long time on every startup
    chown git:git /home/git/repositories

    # Run sshd in the foreground
    /usr/sbin/sshd -De
