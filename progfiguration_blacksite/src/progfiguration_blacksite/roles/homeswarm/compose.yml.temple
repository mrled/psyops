# -*- mode: dockercompose -*-

version: "3.9"

services:

  archivebox:
    image: "{$}archivebox_container"
    command: server --quick-init 0.0.0.0:8000
    cap_add:
      # TODO: this is insecure, but the only option in Swarm Mode
      # See comments in the role about seccomp
      # Required for Chromium sandboxing
      - SYS_ADMIN
    environment:
      PUID: "{$}archivebox_uid"
      PGID: "{$}archivebox_gid"
      TZ: US/Central
    volumes:
      - "{$}archivebox_datadir:/data"
      # Chrome will crash if it doesn't have enough /dev/shm space.
      # Docker sets /dev/shm to 64MB by default.
      # Docker Swarm doesn't have an option to increase this (though regular Docker and Compose do):
      # <https://github.com/moby/moby/issues/26714>.
      # This is a hack around that to increase it:
      # <https://stackoverflow.com/a/59833816>
      # Note that with CHROME_SANDBOX=False, this isn't supposed to be necessary,
      # but there is at least one report of it being required:
      # <https://github.com/ArchiveBox/ArchiveBox/issues/376#issuecomment-696670247>
      - type: tmpfs
        target: /dev/shm
        tmpfs:
          # Size must be in bytes, 512MiB = 536870912 bytes
          size: 536870912
    networks:
      - traefnet
    # dns:
    #   # - homeswarm-pihole.home.micahrl.com
    #   - pihole
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefnet"
      - "traefik.http.routers.traefnet-archivebox.rule=Host(`{$}archivebox_domain`)"
      - "traefik.http.routers.traefnet-archivebox.entrypoints=https"
      - "traefik.http.routers.traefnet-archivebox.tls=true"
      - "traefik.http.routers.traefnet-archivebox.tls.certresolver=zerossl-production"
      - "traefik.http.routers.traefnet-archivebox.service=traefnet-archivebox"
      - "traefik.http.services.traefnet-archivebox.loadbalancer.server.port=8000"

  # TODO: use pihole
  # You want this to work by setting 'dns: ["pihole"]' on the archivebox service,
  # but that doesn't work because values in the 'dns' key must be IP addresses.
  # Probably the only real way to do this is to set up pihole outside of the Swarm,
  # and point the whole host's DNS at that.
  # (archivebox needs Swarm DNS so that it can talk to Sonic, too.)
  # pihole:
  #   image: pihole/pihole:latest
  #   networks:
  #     - traefnet
  #   # ports:
  #   #   - target: 53
  #   #     published: 53
  #   #     protocol: tcp
  #   #     mode: host
  #   #   - target: 53
  #   #     published: 53
  #   #     protocol: udp
  #   #     mode: host
  #   #   - target: 67
  #   #     published: 67
  #   #     protocol: udp
  #   #     mode: host
  #   environment:
  #     TZ: US/Central
  #     WEBPASSWORD: "{$}pihole_webpassword"
  #     DNSMASQ_LISTENING: all
  #     ServerIP: "{$}pihole_serverip"
  #     IPv6: "False"
  #   cap_add:
  #     - NET_ADMIN
  #   volumes:
  #     - "{$}pihole_datadir/pihole:/etc/pihole"
  #     - "{$}pihole_datadir/dnsmasq:/etc/dnsmasq.d"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network=traefnet"
  #     - "traefik.http.routers.traefnet-pihole.rule=Host(`{$}pihole_domain`)"
  #     - "traefik.http.routers.traefnet-pihole.entrypoints=https"
  #     - "traefik.http.routers.traefnet-pihole.tls=true"
  #     - "traefik.http.routers.traefnet-pihole.tls.certresolver=zerossl-production"
  #     - "traefik.http.routers.traefnet-pihole.service=traefnet-pihole"
  #     - "traefik.http.services.traefnet-pihole.loadbalancer.server.port=80"

  sonic:
    image: valeriansaliou/sonic:v1.3.0
    #expose:
    #  - 1491
    networks:
      - traefnet
    environment:
      SEARCH_BACKEND_PASSWORD: "{$}archivebox_sonic_backend_password"
    volumes:
      - "{$}archivebox_sonic_confdir/sonic.cfg:/etc/sonic.cfg:ro"
      - archivebox_sonic_data:/var/lib/sonic/store

  whoami:
    image: containous/whoami:latest
    networks:
      - traefnet
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network=traefnet"
      - "traefik.http.routers.traefnet-whoami.rule=Host(`{$}whoami_domain`)"
      - "traefik.http.routers.traefnet-whoami.entrypoints=https"
      - "traefik.http.routers.traefnet-whoami.tls=true"
      - "traefik.http.routers.traefnet-whoami.tls.certresolver=zerossl-production"
      - "traefik.http.routers.traefnet-whoami.service=traefnet-whoami"
      - "traefik.http.services.traefnet-whoami.loadbalancer.server.port=80"

  balancer:
    image: traefik:2.5
    command: --web --docker --docker.swarmMode --docker.watch --docker.domain={$}balancer_domain --logLevel=DEBUG
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8080:8080/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{$}traefik_acme_storage:/acme/"
      - "{$}traefik_config_file:/traefik.yml:ro"
      - "{$}traefik_aws_creds_file:/root/.aws/credentials"
    environment:
      - AWS_REGION={$}acme_aws_region
      - AWS_HOSTED_ZONE_ID={$}acme_aws_zone
    labels:
      # Dashboard
      # WARNING: A TRAILING SLASH IS MANDATORY IN THE BROWSER
      # e.g. https://example.com/dashboard/, not merely /dashboard
      - "traefik.http.routers.traefnet-traefik-api.rule=Host(`{$}balancer_domain`)&&(PathPrefix(`/api`)||PathPrefix(`/dashboard`)||PathPrefix(`/debug`))"
      - "traefik.http.routers.traefnet-traefik-api.service=api@internal"
      - "traefik.http.routers.traefnet-traefik-api.tls.certresolver=zerossl-production"
      - "traefik.http.routers.traefnet-traefik-api.entrypoints=https"

      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"
      # Without this, traefik can get confused and forward traffic to wrong IPs
      # https://community.traefik.io/t/traefik-routes-to-the-wrong-http-service-ip/5076
      #- "traefik.docker.network=traefnet"

    networks:
      - traefnet
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager

volumes:
  archivebox_web_data:
    driver: local
  archivebox_sonic_data:
    driver: local

networks:
  traefnet:
    driver: overlay
    # Set the name here so that we don't need to prefix it with the stack name
    # when referencing it elsewhere in this file.
    name: traefnet
