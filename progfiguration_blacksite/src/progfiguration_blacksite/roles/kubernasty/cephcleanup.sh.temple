#!/bin/sh
set -eu

# WARNING: THIS SCRIPT WILL DELETE ALL CEPH DATA.
# WARNING: THIS SCRIPT ASSUMES ANY DEVICE WITH A CEPH LVM ON IT CAN BE SAFELY WIPED.
#           (Meaning it assumes that any Ceph device is not used for anything else.)



# We have to take special care to remove encrypted Ceph block devices
# If we don't do this, we can still zap/dd/etc it below and it'll work,
# however we might have to reboot, which is annoying.
for mappeddev in /dev/mapper/*; do
    # A result to this command indicates that $mappeddev is an encrypted block device,
    # and $underlyingdev is the underlying block device.
    underlyingdev=$(cryptsetup status "$mappeddev" | grep '  device:' | awk '{print $2}')
    if test "$underlyingdev"; then
        case "$underlyingdev" in /dev/mapper/ceph-*)
            # If the underlying device is a ceph LVM volume, close the encrypted device on top of it
            cryptsetup luksClose "$mappeddev"
            ;;
        esac
    fi
done

# Now look for all ceph LVM devices
for cephdev in /dev/mapper/ceph-*; do
    # First, find the device that contains the LVM volume
    deps=$(dmsetup deps "$cephdev")
    major=$(echo "$deps" | awk '{print $4}' | sed 's/(//' | sed 's/,//')
    minor=$(echo "$deps" | awk '{print $5}' | sed 's/)//')
    physdev=$(ls -l /dev | grep " $major, *$minor " | awk '{print $10}')

    # Remove the LVM volume
    dmsetup remove --force "$cephdev"

    # Remove the LVM volume's physical device
    sgdisk --zap-all $physdev
    dd if=/dev/zero of="$physdev" bs=1M count=100 oflag=direct,dsync
    blkdiscard $physdev
    partprobe $physdev
done

# Remove the ceph data dir
rook_ceph_data_dir="{$}rook_ceph_data_dir"
if test "$rook_ceph_data_dir"; then
    rm -rf "$rook_ceph_data_dir"
fi
