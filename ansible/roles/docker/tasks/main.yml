---

- name: Use cgroups v1 on Fedora 31
  import_tasks: fedora31_cgroupsv1.yml
  when: ansible_distribution == "Fedora" and ansible_distribution_major_version >= '31'

- name: Install prereqs (Ubuntu)
  apt:
    name:
      - apt-transport-https
      - ca-certificates
      - curl
      - gnupg-agent
      - software-properties-common
    state: latest
  when: ansible_distribution == "Ubuntu"


- name: Add Docker repo (Fedora)
  yum_repository:
    name: docker
    description: docker
    # Got this baseurl by reading Docker install manual,
    # found 'dnf config-manager --add-repo https://REPOURL' command,
    # visiting that REPOURL, and picking docker-ce-stable
    baseurl: https://download.docker.com/linux/fedora/$releasever/$basearch/stable
  when: ansible_distribution == "Fedora"

- name: Add Docker repo (Ubuntu)
  block:
    - name: Download GPG key
      get_url:
        url: https://download.docker.com/linux/ubuntu/gpg
        dest: /usr/local/docker-apt-gpg-key
      register: docker_apt_gpg_key
    - name: Import GPG key
      shell: apt-key add /usr/local/docker-apt-gpg-key
      when: docker_apt_gpg_key.changed
    # NOTE: must use bionic (18.04) for 20.04, for now, apparently this will get fixed later, smh
    - name: Add Docker repo (Ubuntu)
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu/ bionic stable
        filename: docker
        state: present
  when: ansible_distribution == "Ubuntu"

- name: Install packages (Fedora)
  dnf:
    name:
      - containerd.io
      - docker-ce
      - docker-ce-cli
      - python3-docker
      - python3-pip
    state: latest
    update_cache: yes
  when: ansible_distribution == "Fedora"

- name: Install packages (Ubuntu)
  apt:
    name:
      - containerd.io
      - docker-ce
      - docker-ce-cli
      - python3-docker
      - python3-pip
    state: latest
    update_cache: yes
  when: ansible_distribution == "Ubuntu"

- name: Install pip packages
  pip:
    name:
      - jsondiff
      - pyyaml
    state: latest

- name: Start docker service
  systemd:
    name: docker
    state: started
    enabled: yes


- name: Configure the Docker Swarm
  block:


  - name: Configure Swarm ports in the trusted zone (Fedora)
    firewalld:
      port: "{{ item.port }}/{{ item.proto }}"
      permanent: yes
      zone: trusted
      state: enabled
      immediate: yes
    with_items: "{{ docker_swarm_ports }}"
    when: ansible_distribution == "Fedora"

  - name: Configure Swarm ports in the default zone (Fedora)
    firewalld:
      port: "{{ item.port }}/{{ item.proto }}"
      permanent: yes
      state: enabled
      immediate: yes
    with_items: "{{ docker_swarm_ports }}"
    when: ansible_distribution == "Fedora"

  - name: Configure Swarm ports (Ubuntu)
    ufw:
      rule: allow
      port: "{{ item.port }}"
      proto: "{{ item.proto }}"
    when: ansible_distribution == "Ubuntu"

  - name: Create standalone swarm
    docker_swarm:
      state: present
      advertise_addr: "{{ docker_standalone_swarm_advertise_addr | default(false) }}"
    when: docker_standalone_swarm|bool

  - name: Inspect the swarm
    docker_swarm:
      state: inspect
    register: docker_swarm_inspect

  - debug:
      var: docker_swarm_inspect


  when: docker_standalone_swarm|bool


