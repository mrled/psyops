---
- name: Install RPMs
  dnf:
    name:
      - python3-lxml
      - python3-pip
      - samba
      - samba-client
    state: latest
    update_cache: yes

- name: Install pip packages
  pip:
    name:
      - passlib
    state: latest

- name: Add seedbox group
  group:
    name: "{{ seedbox_group }}"
    system: yes

- name: Add seedbox user
  user:
    name: "{{ seedbox_user }}"
    group: "{{ seedbox_group }}"
    system: yes
    create_home: yes

- name: getent seedbox
  getent:
    database: passwd
    key: "{{ seedbox_user }}"
  register: seedbox_getent
  tags: seedbox_docker_deploy

- name: Set UID/GID facts
  set_fact:
    seedbox_uid: "{{ getent_passwd[seedbox_user][1] }}"
    seedbox_gid: "{{ getent_passwd[seedbox_user][2] }}"
    seedbox_homedir: "{{ getent_passwd[seedbox_user][4] }}"
  tags: seedbox_docker_deploy

- import_tasks: samba.yml
  tags: samba

- name: Create seedbox config dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ seedbox_user }}"
    group: "{{ seedbox_group }}"
    mode: "0750"
  with_items:
    - "{{ seedbox_config_dir }}"
    - "{{ seedbox_traefik_config_dir }}"
    - "{{ seedbox_sabnzbd_config_dir }}"
    - "{{ seedbox_lidarr_config_dir }}"
    - "{{ seedbox_sonarr_config_dir }}"
    - "{{ seedbox_radarr_config_dir }}"
    - "{{ seedbox_hydra2_config_dir }}"
    - "{{ seedbox_cops_config_dir }}"
    - "{{ seedbox_transmission_config_dir }}"
    - "{{ seedbox_tentacles_config_dir }}"
    - "{{ seedbox_jackett_config_dir }}"

- name: Make seedbox media subdirs
  file:
    path: "{{ item.value }}"
    state: directory
    owner: "{{ seedbox_user }}"
    group: "{{ seedbox_group }}"
    mode: "0770"
  with_dict: "{{ seedbox_media }}"

- name: Make more seedbox mount subdirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ seedbox_user }}"
    group: "{{ seedbox_group }}"
    mode: "0770"
  with_items:
    - "{{ seedbox_usenet_completes_dir }}"
    - "{{ seedbox_usenet_incompletes_dir }}"
    - "{{ seedbox_usenet_watch_dir }}"
    - "{{ seedbox_torrent_downloads_dir }}"
    - "{{ seedbox_jackett_blackhole_dir }}"

- name: Install seedbox compose file
  template:
    src: seedbox.compose.yml
    dest: "{{ seedbox_compose_path }}"
    owner: "{{ seedbox_user }}"
    group: "{{ seedbox_group }}"
    mode: "0640"
  tags: seedbox_docker_deploy
  notify: seedbox stack redeploy

- name: Configure ports in the trusted zone
  firewalld:
    port: "{{ item }}"
    permanent: yes
    zone: trusted
    state: enabled
    immediate: yes
  with_items:
    - "80/tcp"
    - "443/tcp"
    - "{{ seedbox_transmission_peer_port }}/tcp"
    - "{{ seedbox_transmission_peer_port }}/udp"

- name: Configure ports in the default zone
  firewalld:
    port: "{{ item }}"
    permanent: yes
    state: enabled
    immediate: yes
  with_items:
    - "80/tcp"
    - "443/tcp"
    - "{{ seedbox_transmission_peer_port }}/tcp"
    - "{{ seedbox_transmission_peer_port }}/udp"

- name: Upload transmission image source
  copy:
    src: transmission-docker/
    dest: "{{ seedbox_transmission_docker_build_dir }}"
    owner: root
    group: root
    mode: "0700"
  register: seedbox_transmission_docker_copy

- name: Build transmission image
  docker_image:
    build:
      pull: yes
      path: "{{ seedbox_transmission_docker_build_dir }}"
    name: local/transmission
    tag: ansibuilt
    force_tag: yes
    force_source: "{{ seedbox_transmission_docker_copy.changed }}"
    source: build
  notify: seedbox stack redeploy

- name: Install traefik config
  template:
    src: traefik.yml.j2
    dest: "{{ seedbox_traefik_config_file }}"
    owner: root
    group: root
    mode: "0600"
  notify: seedbox stack redeploy
  tags: seedbox_docker_deploy

- name: Install traefik AWS credentials
  template:
    src: aws_credentials.j2
    dest: "{{ seedbox_traefik_aws_creds_file }}"
    owner: root
    group: root
    mode: "0600"
  notify: seedbox stack redeploy
  tags: seedbox_docker_deploy

- name: Ensure acme.json exists
  # Create an empty file if one isn't present
  # Do nothing if it already exists
  copy:
    content: ""
    dest: "{{ seedbox_traefik_acme_json }}"
    force: no
    owner: root
    group: root
    mode: "0600"
  notify: seedbox stack redeploy
  tags: seedbox_docker_deploy

- name: Configure traefik htpasswd
  htpasswd:
    path: "{{ seedbox_traefik_api_users_file }}"
    name: "{{ seedbox_web_admin_user }}"
    password: "{{ seedbox_web_admin_pass }}"
    owner: root
    group: root
    mode: "0600"
  notify: seedbox stack redeploy
  tags: seedbox_docker_deploy

- name: Remove the Docker stack
  block:
    - name: Remove the Docker stack
      docker_stack:
        state: absent
        name: seedbox
        compose:
          - "{{ seedbox_compose_path }}"
    - name: Pause so the network gets deleted too
      pause:
        seconds: 15
  tags: seedbox_docker_deploy
  when: seedbox_docker_greenfield_deploy

- name: Deploy the Docker stack
  docker_stack:
    state: present
    name: seedbox
    prune: yes
    compose:
      - "{{ seedbox_compose_path }}"
  tags: seedbox_docker_deploy

#
# Light configuration of our apps
# At least for now, we expect that these configs need to be backed up,
# because we will do lots of manual configuration as well.
# This just gets the basics.
#

# https://sabnzbd.org/wiki/extra/hostname-check.html
# https://groups.google.com/forum/#!msg/ansible-project/JvHfchsgRaU/Vw_CzBbvadgJ
- name: Fix sabnzbd host verification check
  lineinfile:
    path: "{{ seedbox_sabnzbd_config_dir }}/sabnzbd.ini"
    insertafter: '^\[misc\]$'
    regexp: "^host_whitelist ="
    line: "host_whitelist = {{ ansible_fqdn }}, {{ seedbox_misc_domain }}, "
  notify: seedbox stack redeploy

# UrlBase/url_base:
# This step is required for the traefik reverse proxy to work
# The reverse proxy can pass traffic from any route (e.g. /blahblah-sonarr) to the backend (e.g. sonarr)
# However, without this step, the backend application will not know that its accessed via a subdir,
# so it'll return full paths to resources as if it were at the root (e.g. /example.js)
# instead of under the subdir (e.g. /blahblah-sonarr/example.js)

- name: Configure *arr UrlBase
  xml:
    path: "{{ item.value }}"
    xpath: /Config/UrlBase
    value: "/{{ item.key }}"
  with_dict: "{{ seedbox_arr_configs }}"
  notify: seedbox stack redeploy

- name: Configure sabnzbd url_base
  ini_file:
    path: "{{ seedbox_sabnzbd_config_ini }}"
    section: misc
    option: url_base
    value: /sabnzbd
  notify: seedbox stack redeploy

- name: Configure nzbhydra2 url base
  lineinfile:
    path: "{{ seedbox_hydra2_config_yaml }}"
    line: '  urlBase: "/hydra2"'
    insertafter: "main:"
    regex: " *urlBase: .*"
  notify: seedbox stack redeploy
