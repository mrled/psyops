---

- name: Install RPMs
  dnf:
    name:
      - python3-lxml
      - python3-pip
    state: latest
    update_cache: yes

- name: Install pip packages
  pip:
    name:
      - passlib
    state: latest

- name: Add seedbox group
  group:
    name: "{{ seedbox_group }}"
    system: yes

- name: Add seedbox user
  user:
    name: "{{ seedbox_user }}"
    group: "{{ seedbox_group }}"
    system: yes
    create_home: yes

- name: getent seedbox
  getent:
    database: passwd
    key: "{{ seedbox_user }}"
  register: seedbox_getent

- name: Set UID/GID facts
  set_fact:
    seedbox_uid: "{{ getent_passwd[seedbox_user][1] }}"
    seedbox_gid: "{{ getent_passwd[seedbox_user][2] }}"
    seedbox_homedir: "{{ getent_passwd[seedbox_user][4] }}"

- name: Create seedbox config dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ seedbox_user }}"
    group: "{{ seedbox_group }}"
    mode: "0750"
  with_items:
    - "{{ seedbox_config_dir }}"
    - "{{ seedbox_sabnzbd_config_dir }}"
    - "{{ seedbox_lidarr_config_dir }}"
    - "{{ seedbox_sonarr_config_dir }}"
    - "{{ seedbox_radarr_config_dir }}"

- name: Create seedbox mountpoints
  file:
    state: directory
    path: "{{ item.path }}"
    owner: "{{ seedbox_user }}"
    group: "{{ seedbox_group }}"
    mode: "0755"
  with_items: "{{ seedbox_mount_list }}"

- name: Configure seedbox mount files
  copy:
    content: |+
      username={{ item.username }}
      password={{ item.password }}
    dest: "{{ item.credsfile }}"
    owner: root
    group: root
    mode: "0600"
  with_items: "{{ seedbox_mount_list }}"

- name: Mount seedbox mounts
  mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    fstype: "{{ item.fstype }}"
    opts: credentials={{ item.credsfile }},uid={{ seedbox_uid }},gid={{ seedbox_gid }}
    state: mounted
  with_items: "{{ seedbox_mount_list }}"

- name: Make seedbox mount subdirs
  file:
    path: "{{ item.value }}"
    state: directory
    mode: "0770"
  with_dict: "{{ seedbox_media }}"

- name: Make more seedbox mount subdirs
  file:
    path: "{{ item }}"
    state: directory
    mode: "0770"
  with_items:
    - "{{ seedbox_usenet_completes_dir }}"
    - "{{ seedbox_usenet_incompletes_dir }}"
    - "{{ seedbox_usenet_watch_dir }}"

- name: Install seedbox compose file
  template:
    src: seedbox.compose.yml
    dest: "{{ seedbox_compose_path }}"
    owner: "{{ seedbox_user }}"
    group: "{{ seedbox_group }}"
    mode: "0640"

- name: Configure ports in the trusted zone
  firewalld:
    port: "{{ item }}/tcp"
    permanent: yes
    zone: trusted
    state: enabled
    immediate: yes
  with_items:
    - "80"
    - "443"

- name: Configure ports in the default zone
  firewalld:
    port: "{{ item }}/tcp"
    permanent: yes
    state: enabled
    immediate: yes
  with_items:
    - "80"
    - "443"

- name: Make traefik config dir
  file:
    path: "{{ seedbox_traefik_config_dir }}"
    state: directory
    owner: root
    group: root
    mode: "0700"

- name: Install traefik config
  template:
    src: traefik.toml.j2
    dest: "{{ seedbox_traefik_toml }}"
    owner: root
    group: root
    mode: "0600"

- name: Install traefik AWS credentials
  template:
    src: aws_credentials.j2
    dest: "{{ seedbox_traefik_aws_creds_file }}"
    owner: root
    group: root
    mode: "0600"

- name: Ensure acme.json exists
  # Create an empty file if one isn't present
  # Do nothing if it already exists
  copy:
    content: ""
    dest: "{{ seedbox_traefik_acme_json }}"
    force: no
    owner: root
    group: root
    mode: "0600"

- name: Configure traefik htpasswd
  htpasswd:
    path: "{{ seedbox_traefik_api_users_file }}"
    name: "{{ seedbox_web_admin_user }}"
    password: "{{ seedbox_web_admin_pass }}"
    owner: root
    group: root
    mode: "0600"

- name: Deploy the Docker stack
  docker_stack:
    state: present
    name: seedbox
    compose:
      - "{{ seedbox_compose_path }}"

#
# Light configuration of our apps
# At least for now, we expect that these configs need to be backed up,
# because we will do lots of manual configuration as well.
# This just gets the basics.
#

# https://sabnzbd.org/wiki/extra/hostname-check.html
# https://groups.google.com/forum/#!msg/ansible-project/JvHfchsgRaU/Vw_CzBbvadgJ
- name: Fix sabnzbd host verification check
  lineinfile:
    path: "{{ seedbox_sabnzbd_config_dir }}/sabnzbd.ini"
    insertafter: '^\[misc\]$'
    regexp: '^host_whitelist ='
    line: 'host_whitelist = {{ ansible_fqdn }}, {{ seedbox_domain }}, '
  register: seedbox_needsupdate_sab_hostverify

# UrlBase/url_base:
# This step is required for the traefik reverse proxy to work
# The reverse proxy can pass traffic from any route (e.g. /blahblah-sonarr) to the backend (e.g. sonarr)
# However, without this step, the backend application will not know that its accessed via a subdir,
# so it'll return full paths to resources as if it were at the root (e.g. /example.js)
# instead of under the subdir (e.g. /blahblah-sonarr/example.js)

- name: Configure *arr UrlBase
  xml:
    path: "{{ item.value }}"
    xpath: /Config/UrlBase
    value: "/{{ item.key }}"
  with_dict: "{{ seedbox_arr_configs }}"
  register: seedbox_needsupdate_arr_urlbase

- name: Configure sabnzbd url_base
  ini_file:
    path: "{{ seedbox_sabnzbd_config_ini }}"
    section: misc
    option: url_base
    value: /sabnzbd
  register: seedbox_needsupdate_sab_urlbase

# We have to redeploy the stack to pick up any config changes
- name: Redeploy the Docker stack after changing a config file
  docker_stack:
    state: present
    name: seedbox
    compose:
      - "{{ seedbox_compose_path }}"
  when: seedbox_needsupdate_sab_hostverify.changed or seedbox_needsupdate_arr_urlbase.changed or seedbox_needsupdate_sab_urlbase.changed


