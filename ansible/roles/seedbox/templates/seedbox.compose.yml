version: '3.7'

services:
  sonarr:
    image: "linuxserver/sonarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_sonarr_config_dir }}:/config"
      - "{{ seedbox_usenet_completes_dir }}:/downloads"
      - "{{ seedbox_media.tv }}:/tv"
    networks:
      - privnet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-sonarr.rule=Host(`{{ seedbox_domain }}`) && PathPrefix(`/sonarr`)"
      - "traefik.http.routers.seedbox-sonarr.tls=true"
      - "traefik.http.routers.seedbox-sonarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-sonarr.service=seedbox-sonarr"
      - "traefik.http.services.seedbox-sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.seedbox-sonarr.middlewares=seedbox-auth"
  lidarr:
    image: "linuxserver/lidarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_lidarr_config_dir }}:/config"
      - "{{ seedbox_usenet_completes_dir }}:/downloads"
      - "{{ seedbox_media.music }}:/music"
    networks:
      - privnet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-lidarr.rule=Host(`{{ seedbox_domain }}`) && PathPrefix(`/lidarr`)"
      - "traefik.http.routers.seedbox-lidarr.tls=true"
      - "traefik.http.routers.seedbox-lidarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-lidarr.service=seedbox-lidarr"
      - "traefik.http.services.seedbox-lidarr.loadbalancer.server.port=8686"
      - "traefik.http.routers.seedbox-lidarr.middlewares=seedbox-auth"
  radarr:
    image: "linuxserver/radarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_radarr_config_dir }}:/config"
      - "{{ seedbox_usenet_completes_dir }}:/downloads"
      - "{{ seedbox_media.movies }}:/movies"
    networks:
      - privnet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-radarr.rule=Host(`{{ seedbox_domain }}`) && PathPrefix(`/radarr`)"
      - "traefik.http.routers.seedbox-radarr.tls=true"
      - "traefik.http.routers.seedbox-radarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-radarr.service=seedbox-radarr"
      - "traefik.http.services.seedbox-radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.seedbox-radarr.middlewares=seedbox-auth"
  sabnzb:
    image: "linuxserver/sabnzbd"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_sabnzbd_config_dir }}:/config"
      - "{{ seedbox_usenet_completes_dir }}:/downloads"
      - "{{ seedbox_usenet_incompletes_dir }}:/incomplete-downloads"
      - "{{ seedbox_usenet_watch_dir }}:/watched-folder"
      - "{{ seedbox_media.tv }}:/tv"
      - "{{ seedbox_media.music }}:/music"
      - "{{ seedbox_media.itunes }}:/itunes"
      - "{{ seedbox_media.movies }}:/movies"
      - "{{ seedbox_media.books }}:/books"
    networks:
      - privnet
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-sabnzb.rule=Host(`{{ seedbox_domain }}`) && PathPrefix(`/sabnzbd`)"
      - "traefik.http.routers.seedbox-sabnzb.tls=true"
      - "traefik.http.routers.seedbox-sabnzb.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-sabnzb.service=seedbox-sabnzb"
      - "traefik.http.services.seedbox-sabnzb.loadbalancer.server.port=8080"
      - "traefik.http.routers.seedbox-sabnzb.middlewares=seedbox-auth"

  balancer:
    image: traefik
    command: --web --docker --docker.swarmmode --docker.watch --docker.domain={{ seedbox_domain }} --logLevel=DEBUG
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8080:8080/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - {{ seedbox_traefik_toml }}:/traefik.toml:ro
      - {{ seedbox_traefik_acme_json }}:/acme.json
      - {{ seedbox_traefik_aws_creds_file }}:/root/.aws/credentials
      - {{ seedbox_traefik_api_users_file }}:/traefik-users.htpasswd
    environment:
      - AWS_REGION={{ seedbox_acme_aws_region }}
      - AWS_HOSTED_ZONE_ID={{ seedbox_acme_aws_zone }}
    labels:
      # Dashboard
      - "traefik.http.routers.seedbox-traefik-api.rule=Host(`{{ seedbox_domain }}`)&&(PathPrefix(`/api`)||PathPrefix(`/dashboard`)||PathPrefix(`/debug`))"
      - "traefik.http.routers.seedbox-traefik-api.service=api@internal"
      - "traefik.http.routers.seedbox-traefik-api.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-traefik-api.entrypoints=https"
      - "traefik.http.routers.seedbox-traefik-api.middlewares=seedbox-auth"

      # HTTP basic auth middleware
      - "traefik.http.middlewares.seedbox-auth.basicauth.usersfile=/traefik-users.htpasswd"

      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

    networks:
      - pubnet
      - privnet
    deploy:
      mode: global
      placement:
        constraints: [node.role == manager]

# docker network create -d overlay traefik
networks:
  pubnet:
    driver: overlay
  privnet:
    driver: overlay
