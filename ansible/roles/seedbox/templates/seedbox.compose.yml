version: "3.7"

services:
  #

  sonarr:
    image: "linuxserver/sonarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_sonarr_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-sonarr.rule=Host(`{{ seedbox_misc_domain }}`) && PathPrefix(`/sonarr`)"
      - "traefik.http.routers.seedbox-sonarr.tls=true"
      - "traefik.http.routers.seedbox-sonarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-sonarr.service=seedbox-sonarr"
      - "traefik.http.services.seedbox-sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.seedbox-sonarr.middlewares=seedbox-auth"

  lidarr:
    image: "linuxserver/lidarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_lidarr_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-lidarr.rule=Host(`{{ seedbox_misc_domain }}`) && PathPrefix(`/lidarr`)"
      - "traefik.http.routers.seedbox-lidarr.tls=true"
      - "traefik.http.routers.seedbox-lidarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-lidarr.service=seedbox-lidarr"
      - "traefik.http.services.seedbox-lidarr.loadbalancer.server.port=8686"
      - "traefik.http.routers.seedbox-lidarr.middlewares=seedbox-auth"

  radarr:
    image: "linuxserver/radarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_radarr_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-radarr.rule=Host(`{{ seedbox_misc_domain }}`) && PathPrefix(`/radarr`)"
      - "traefik.http.routers.seedbox-radarr.tls=true"
      - "traefik.http.routers.seedbox-radarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-radarr.service=seedbox-radarr"
      - "traefik.http.services.seedbox-radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.seedbox-radarr.middlewares=seedbox-auth"

  sabnzb:
    image: "linuxserver/sabnzbd"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_sabnzbd_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-sabnzb.rule=Host(`{{ seedbox_misc_domain }}`) && PathPrefix(`/sabnzbd`)"
      - "traefik.http.routers.seedbox-sabnzb.tls=true"
      - "traefik.http.routers.seedbox-sabnzb.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-sabnzb.service=seedbox-sabnzb"
      - "traefik.http.services.seedbox-sabnzb.loadbalancer.server.port=8080"

  transmission:
    image: local/transmission:ansibuilt
    init: true
    user: "{{ seedbox_uid }}:{{ seedbox_gid }}"
    volumes:
      - "{{ seedbox_transmission_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    ports:
      - "{{ seedbox_transmission_peer_port }}:{{ seedbox_transmission_peer_port }}/tcp"
      - "{{ seedbox_transmission_peer_port }}:{{ seedbox_transmission_peer_port }}/udp"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-transmission.rule=Host(`{{ seedbox_transmission_domain }}`)"
      - "traefik.http.routers.seedbox-transmission.tls=true"
      - "traefik.http.routers.seedbox-transmission.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-transmission.service=seedbox-transmission"
      - "traefik.http.services.seedbox-transmission.loadbalancer.server.port=9091"

  hydra2:
    image: linuxserver/nzbhydra2
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_hydra2_config_dir }}:/config"
      - "{{ seedbox_usenet_watch_dir }}:/downloads"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-hydra2.rule=Host(`{{ seedbox_misc_domain }}`) && PathPrefix(`/hydra2`)"
      - "traefik.http.routers.seedbox-hydra2.tls=true"
      - "traefik.http.routers.seedbox-hydra2.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-hydra2.service=seedbox-hydra2"
      - "traefik.http.services.seedbox-hydra2.loadbalancer.server.port=5076"

  jackett:
    image: linuxserver/jackett
    container_name: jackett
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
      AUTO_UPDATE: "true" # recommended by jackett
      #RUN_OPTS: <run options here> #optional
    volumes:
      - "{{ seedbox_jackett_config_dir }}:/config"
      - "{{ seedbox_jackett_blackhole_dir }}:/downloads"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-jackett.rule=Host(`{{ seedbox_jackett_domain }}`)"
      - "traefik.http.routers.seedbox-jackett.tls=true"
      - "traefik.http.routers.seedbox-jackett.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-jackett.service=seedbox-jackett"
      - "traefik.http.services.seedbox-jackett.loadbalancer.server.port=9117"
      - "traefik.http.routers.seedbox-jackett.middlewares=seedbox-auth"

  cops:
    image: linuxserver/cops
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_cops_config_dir }}:/config"
      - "{{ seedbox_media.books }}:/books"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-cops.rule=Host(`{{ seedbox_cops_domain }}`)"
      - "traefik.http.routers.seedbox-cops.tls=true"
      - "traefik.http.routers.seedbox-cops.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-cops.service=seedbox-cops"
      - "traefik.http.services.seedbox-cops.loadbalancer.server.port=80"

  tentacles:
    image: linuxserver/jellyfin
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
      UMASK_SET: "022"
    volumes:
      - "{{ seedbox_tentacles_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-tentacles.rule=Host(`{{ seedbox_tentacles_domain }}`)"
      - "traefik.http.routers.seedbox-tentacles.tls=true"
      - "traefik.http.routers.seedbox-tentacles.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-tentacles.service=seedbox-tentacles"
      - "traefik.http.services.seedbox-tentacles.loadbalancer.server.port=8096"

  {#
  plex:
    image: plexinc/pms-docker
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
      VERSION: docker
      UMASK_SET: "022"
      #PLEX_CLAIM: #optional
    volumes:
      - "{{ seedbox_plex_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    devices:
      - /dev/dri:/dev/dri
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-plex.rule=Host(`{{ seedbox_plex_domain }}`)"
      - "traefik.http.routers.seedbox-plex.tls=true"
      - "traefik.http.routers.seedbox-plex.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-plex.service=seedbox-plex"
      - "traefik.http.services.seedbox-plex.loadbalancer.server.port=32400"
  #}

  whoami:
    image: containous/whoami:latest
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-whoami.rule=Host(`{{ seedbox_misc_domain }}`) && PathPrefix(`/whoami`)"
      - "traefik.http.routers.seedbox-whoami.tls=true"
      - "traefik.http.routers.seedbox-whoami.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-whoami.service=seedbox-whoami"
      - "traefik.http.services.seedbox-whoami.loadbalancer.server.port=80"

  balancer:
    image: traefik
    command: --web --docker --docker.swarmmode --docker.watch --docker.domain={{ seedbox_root_domain }} --logLevel=DEBUG
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8080:8080/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ seedbox_traefik_config_file }}:/traefik.yml:ro"
      - "{{ seedbox_traefik_acme_json }}:/acme.json"
      - "{{ seedbox_traefik_aws_creds_file }}:/root/.aws/credentials"
      - "{{ seedbox_traefik_api_users_file }}:/traefik-users.htpasswd"
    environment:
      - AWS_REGION={{ seedbox_acme_aws_region }}
      - AWS_HOSTED_ZONE_ID={{ seedbox_acme_aws_zone }}
    labels:
      # Dashboard
      - "traefik.http.routers.seedbox-traefik-api.rule=Host(`{{ seedbox_root_domain }}`)&&(PathPrefix(`/api`)||PathPrefix(`/dashboard`)||PathPrefix(`/debug`))"
      - "traefik.http.routers.seedbox-traefik-api.service=api@internal"
      - "traefik.http.routers.seedbox-traefik-api.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-traefik-api.entrypoints=https"
      - "traefik.http.routers.seedbox-traefik-api.middlewares=seedbox-auth"

      # HTTP basic auth middleware
      - "traefik.http.middlewares.seedbox-auth.basicauth.usersfile=/traefik-users.htpasswd"

      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

    networks:
      - dernetverk
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager

networks:
  dernetverk:
    driver: overlay
