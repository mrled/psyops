version: "3.7"

services:
  #

  sonarr:
    image: "linuxserver/sonarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_sonarr_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-sonarr.rule=Host(`{{ seedbox_sonarr_domain }}`)"
      - "traefik.http.routers.seedbox-sonarr.tls=true"
      - "traefik.http.routers.seedbox-sonarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-sonarr.service=seedbox-sonarr"
      - "traefik.http.services.seedbox-sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.seedbox-sonarr.middlewares=seedbox-auth-bridgetroll-mw"

  lidarr:
    image: "linuxserver/lidarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_lidarr_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-lidarr.rule=Host(`{{ seedbox_lidarr_domain }}`)"
      - "traefik.http.routers.seedbox-lidarr.tls=true"
      - "traefik.http.routers.seedbox-lidarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-lidarr.service=seedbox-lidarr"
      - "traefik.http.services.seedbox-lidarr.loadbalancer.server.port=8686"
      - "traefik.http.routers.seedbox-lidarr.middlewares=seedbox-auth-bridgetroll-mw"

  radarr:
    image: "linuxserver/radarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_radarr_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-radarr.rule=Host(`{{ seedbox_radarr_domain }}`)"
      - "traefik.http.routers.seedbox-radarr.tls=true"
      - "traefik.http.routers.seedbox-radarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-radarr.service=seedbox-radarr"
      - "traefik.http.services.seedbox-radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.seedbox-radarr.middlewares=seedbox-auth-bridgetroll-mw"

  sabnzbd:
    image: "linuxserver/sabnzbd"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_sabnzbd_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-sabnzb.rule=Host(`{{ seedbox_sabnzbd_domain }}`)"
      - "traefik.http.routers.seedbox-sabnzb.tls=true"
      - "traefik.http.routers.seedbox-sabnzb.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-sabnzb.service=seedbox-sabnzb"
      - "traefik.http.services.seedbox-sabnzb.loadbalancer.server.port=8080"

  transmission:
    image: local/transmission:ansibuilt
    init: true
    user: "{{ seedbox_uid }}:{{ seedbox_gid }}"
    volumes:
      - "{{ seedbox_transmission_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    ports:
      - "{{ seedbox_transmission_peer_port }}:{{ seedbox_transmission_peer_port }}/tcp"
      - "{{ seedbox_transmission_peer_port }}:{{ seedbox_transmission_peer_port }}/udp"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-transmission.rule=Host(`{{ seedbox_transmission_domain }}`)"
      - "traefik.http.routers.seedbox-transmission.tls=true"
      - "traefik.http.routers.seedbox-transmission.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-transmission.service=seedbox-transmission"
      - "traefik.http.services.seedbox-transmission.loadbalancer.server.port=9091"

  hydra2:
    image: linuxserver/nzbhydra2
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_hydra2_config_dir }}:/config"
      - "{{ seedbox_usenet_watch_dir }}:/downloads"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-hydra2.rule=Host(`{{ seedbox_hydra2_domain }}`)"
      - "traefik.http.routers.seedbox-hydra2.tls=true"
      - "traefik.http.routers.seedbox-hydra2.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-hydra2.service=seedbox-hydra2"
      - "traefik.http.services.seedbox-hydra2.loadbalancer.server.port=5076"
      - "traefik.http.routers.seedbox-hydra2.middlewares=seedbox-auth-bridgetroll-mw"

  jackett:
    image: linuxserver/jackett
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
      AUTO_UPDATE: "true" # recommended by jackett
      #RUN_OPTS: <run options here> #optional
    volumes:
      - "{{ seedbox_jackett_config_dir }}:/config"
      - "{{ seedbox_jackett_blackhole_dir }}:/downloads"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-jackett.rule=Host(`{{ seedbox_jackett_domain }}`)"
      - "traefik.http.routers.seedbox-jackett.tls=true"
      - "traefik.http.routers.seedbox-jackett.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-jackett.service=seedbox-jackett"
      - "traefik.http.services.seedbox-jackett.loadbalancer.server.port=9117"
      - "traefik.http.routers.seedbox-jackett.middlewares=seedbox-auth-bridgetroll-mw"

  cops:
    image: linuxserver/cops
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_cops_config_dir }}:/config"
      - "{{ seedbox_media.books }}/Calibre:/books"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-cops.rule=Host(`{{ seedbox_cops_domain }}`)"
      - "traefik.http.routers.seedbox-cops.tls=true"
      - "traefik.http.routers.seedbox-cops.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-cops.service=seedbox-cops"
      - "traefik.http.services.seedbox-cops.loadbalancer.server.port=80"
      - "traefik.http.routers.seedbox-cops.middlewares=seedbox-auth-bridgetroll-mw"

  tentacles:
    # TODO: change to jellyfin/jellyfin ?
    image: ghcr.io/linuxserver/jellyfin:latest
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
      UMASK_SET: "022"
    volumes:
      - "{{ seedbox_tentacles_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-tentacles.rule=Host(`{{ seedbox_tentacles_domain }}`)"
      - "traefik.http.routers.seedbox-tentacles.tls=true"
      - "traefik.http.routers.seedbox-tentacles.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-tentacles.service=seedbox-tentacles"
      - "traefik.http.services.seedbox-tentacles.loadbalancer.server.port=8096"

  plex:
    # Warning: options differ for Plex Inc vs LinuxServer.io Plex containers, e.g. PUID/PLEX_UID
    image: plexinc/pms-docker
    environment:
      PLEX_UID: "{{ seedbox_uid }}"
      PLEX_GID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
      VERSION: docker
      UMASK_SET: "022"
      #PLEX_CLAIM: #optional
      ADVERTISE_IP: "http://{{ seedbox_plex_domain }}:32400/"
      CHANGE_CONFIG_DIR_OWNERSHIP: "false"
    volumes:
      - "{{ seedbox_plex_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
      - "{{ seedbox_plex_transcode_tmp }}:/transcode"
    devices:
      - /dev/dri:/dev/dri
    networks:
      - dernetverk
    ports:
    # Note that traefik isn't used for these ports - we're just exposing them directly
{% for port in seedbox_plex_ports %}
      - "{{ port.port }}:{{ port.port }}/{{ port.protocol }}"
{% endfor %}
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-plex.rule=Host(`{{ seedbox_plex_domain }}`)"
      - "traefik.http.routers.seedbox-plex.tls=true"
      - "traefik.http.routers.seedbox-plex.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-plex.service=seedbox-plex"
      - "traefik.http.services.seedbox-plex.loadbalancer.server.port=32400"
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"

  dex:
    image: dexidp/dex
    volumes:
      - /etc/localtime:/etc/localtime:ro
    # UID and GID of the dex user isn't configurable -- have to map the config to UID/GID 1001
    configs:
      - source: dex_config
        target: /config.yml
        uid: "1001"
        gid: "1001"
        mode: 0600
    volumes:
      - "{{ seedbox_dex_config_dir }}/db:/dexdb"
      - "{{ seedbox_dex_config_dir }}/mindcontrol:/srv/dex/web/themes/mindcontrol"
    networks:
      - dernetverk
    command: ['dex', 'serve','/config.yml']
    labels:
      - traefik.enable=true
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
      - "traefik.http.routers.seedbox-dex.rule=Host(`{{ seedbox_dex_domain }}`)"
      - "traefik.http.routers.seedbox-dex.tls=true"
      - "traefik.http.routers.seedbox-dex.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-dex.entrypoints=https"
      - "traefik.http.routers.seedbox-dex.service=seedbox-dex"
      - "traefik.http.services.seedbox-dex.loadbalancer.server.port=5556"

  # traefik forward auth
  # A bridge troll is a kind of authenticator
  bridgetroll:
    image: thomseddon/traefik-forward-auth:2
    environment:
      DEFAULT_PROVIDER: oidc
      PROVIDERS_OIDC_CLIENT_ID: "{{ seedbox_dex_client_id }}"
      PROVIDERS_OIDC_CLIENT_SECRET: "{{ seedbox_dex_client_secret }}"
      PROVIDERS_OIDC_ISSUER_URL: https://{{ seedbox_dex_domain }}
      SECRET: "{{ seedbox_tfa_secret }}"
      AUTH_HOST: "{{ seedbox_tfa_domain }}"
      COOKIE_DOMAIN: "{{ seedbox_root_domain }}"
      LOG_LEVEL: debug
    networks:
      - dernetverk
    labels:
      - traefik.enable=true
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
      - "traefik.http.routers.seedbox-bridgetroll.rule=Host(`{{ seedbox_tfa_domain }}`)"
      - "traefik.http.routers.seedbox-bridgetroll.entrypoints=https"
      - "traefik.http.routers.seedbox-bridgetroll.tls=true"
      - "traefik.http.routers.seedbox-bridgetroll.tls.domains[0].main={{ seedbox_root_domain }}"
      - "traefik.http.routers.seedbox-bridgetroll.tls.domains[0].sans=*.{{ seedbox_root_domain }}"
      - "traefik.http.routers.seedbox-bridgetroll.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-bridgetroll.service=seedbox-bridgetroll"
      - "traefik.http.services.seedbox-bridgetroll.loadbalancer.server.port=4181"
      - "traefik.http.middlewares.seedbox-auth-bridgetroll-mw.forwardauth.address=http://bridgetroll:4181"
      - "traefik.http.middlewares.seedbox-auth-bridgetroll-mw.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.seedbox-auth-bridgetroll-mw.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.seedbox-bridgetroll.middlewares=seedbox-auth-bridgetroll-mw"

  whoami:
    image: containous/whoami:latest
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
      - "traefik.http.routers.seedbox-whoami.rule=Host(`{{ seedbox_whoami_domain }}`)"
      - "traefik.http.routers.seedbox-whoami.entrypoints=https"
      - "traefik.http.routers.seedbox-whoami.tls=true"
      - "traefik.http.routers.seedbox-whoami.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-whoami.service=seedbox-whoami"
      - "traefik.http.services.seedbox-whoami.loadbalancer.server.port=80"
      - "traefik.http.routers.seedbox-whoami.middlewares=seedbox-auth-bridgetroll-mw"

  balancer:
    image: traefik:2.5
    command: --web --docker --docker.swarmMode --docker.watch --docker.domain={{ seedbox_balancer_domain }} --logLevel=DEBUG
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8080:8080/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ seedbox_traefik_config_file }}:/traefik.yml:ro"
      - "{{ seedbox_traefik_acme_json }}:/acme.json"
      - "{{ seedbox_traefik_aws_creds_file }}:/root/.aws/credentials"
    environment:
      - AWS_REGION={{ seedbox_acme_aws_region }}
      - AWS_HOSTED_ZONE_ID={{ seedbox_acme_aws_zone }}
    labels:
      # Dashboard
      # WARNING: A TRAILING SLASH IS MANDATORY IN THE BROWSER
      # e.g. https://example.com/dashboard/, not merely /dashboard
      - "traefik.http.routers.seedbox-traefik-api.rule=Host(`{{ seedbox_balancer_domain }}`)&&(PathPrefix(`/api`)||PathPrefix(`/dashboard`)||PathPrefix(`/debug`))"
      - "traefik.http.routers.seedbox-traefik-api.service=api@internal"
      - "traefik.http.routers.seedbox-traefik-api.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-traefik-api.entrypoints=https"
      - "traefik.http.routers.seedbox-traefik-api.middlewares=seedbox-auth-bridgetroll-mw"

      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # Without this, traefik can get confused and forward traffic to wrong IPs
      # https://community.traefik.io/t/traefik-routes-to-the-wrong-http-service-ip/5076
      #- "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"

    networks:
      - dernetverk
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager

configs:
  dex_config:
    file: "{{ seedbox_dex_config_dir }}/config.yml"
    name: dex_config_{{ seedbox_dex_config_hash }}

networks:
  dernetverk:
    driver: overlay
