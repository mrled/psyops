version: "3.7"

services:
  #

  sonarr:
    image: "linuxserver/sonarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_sonarr_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-sonarr.rule=Host(`{{ seedbox_sonarr_domain }}`)"
      - "traefik.http.routers.seedbox-sonarr.tls=true"
      - "traefik.http.routers.seedbox-sonarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-sonarr.service=seedbox-sonarr"
      - "traefik.http.services.seedbox-sonarr.loadbalancer.server.port=8989"
      - "traefik.http.routers.seedbox-sonarr.middlewares=seedbox-auth-bridgetroll-mw"

  lidarr:
    image: "linuxserver/lidarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_lidarr_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-lidarr.rule=Host(`{{ seedbox_lidarr_domain }}`)"
      - "traefik.http.routers.seedbox-lidarr.tls=true"
      - "traefik.http.routers.seedbox-lidarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-lidarr.service=seedbox-lidarr"
      - "traefik.http.services.seedbox-lidarr.loadbalancer.server.port=8686"
      - "traefik.http.routers.seedbox-lidarr.middlewares=seedbox-auth-bridgetroll-mw"

  headphones:
    image: ghcr.io/linuxserver/headphones
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_headphones_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-headphones.rule=Host(`{{ seedbox_headphones_domain }}`)"
      - "traefik.http.routers.seedbox-headphones.tls=true"
      - "traefik.http.routers.seedbox-headphones.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-headphones.service=seedbox-headphones"
      - "traefik.http.services.seedbox-headphones.loadbalancer.server.port=8181"
      - "traefik.http.routers.seedbox-headphones.middlewares=seedbox-auth-bridgetroll-mw"

  radarr:
    image: "linuxserver/radarr"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_radarr_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-radarr.rule=Host(`{{ seedbox_radarr_domain }}`)"
      - "traefik.http.routers.seedbox-radarr.tls=true"
      - "traefik.http.routers.seedbox-radarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-radarr.service=seedbox-radarr"
      - "traefik.http.services.seedbox-radarr.loadbalancer.server.port=7878"
      - "traefik.http.routers.seedbox-radarr.middlewares=seedbox-auth-bridgetroll-mw"

  sabnzbd:
    image: "linuxserver/sabnzbd"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_sabnzbd_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-sabnzb.rule=Host(`{{ seedbox_sabnzbd_domain }}`)"
      - "traefik.http.routers.seedbox-sabnzb.tls=true"
      - "traefik.http.routers.seedbox-sabnzb.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-sabnzb.service=seedbox-sabnzb"
      - "traefik.http.services.seedbox-sabnzb.loadbalancer.server.port=8080"
      - "traefik.http.routers.seedbox-sabnzb.middlewares=seedbox-auth-bridgetroll-mw"

  transmission:
    image: local/transmission:ansibuilt
    init: true
    user: "{{ seedbox_uid }}:{{ seedbox_gid }}"
    volumes:
      - "{{ seedbox_transmission_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    ports:
      - "{{ seedbox_transmission_peer_port }}:{{ seedbox_transmission_peer_port }}/tcp"
      - "{{ seedbox_transmission_peer_port }}:{{ seedbox_transmission_peer_port }}/udp"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
      - "traefik.http.routers.seedbox-transmission.rule=Host(`{{ seedbox_transmission_domain }}`)"
      - "traefik.http.routers.seedbox-transmission.tls=true"
      - "traefik.http.routers.seedbox-transmission.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-transmission.service=seedbox-transmission"
      - "traefik.http.services.seedbox-transmission.loadbalancer.server.port=9091"
      - "traefik.http.routers.seedbox-transmission.middlewares=seedbox-auth-bridgetroll-mw"

  # rtorrent:
  #   image: ghcr.io/crazy-max/rtorrent-rutorrent
  #   environment:
  #     PUID: "{{ seedbox_uid }}"
  #     PGID: "{{ seedbox_gid }}"
  #     TZ: "{{ seedbox_timezone }}"
  #     RT_LOG_LEVEL: debug
  #     RT_DHT_PORT: "{{ seedbox_rtorrent_dht_port }}"
  #     RT_INC_PORT: "{{ seedbox_rtorrent_peer_port }}"
  #   ports:
  #     - "{{ seedbox_rtorrent_dht_port }}/tcp"
  #     - "{{ seedbox_rtorrent_dht_port }}/udp"
  #     - "{{ seedbox_rtorrent_peer_port }}/tcp"
  #     - "{{ seedbox_rtorrent_peer_port }}/udp"
  #   networks:
  #     - dernetverk
  #   volumes:
  #     - "{{ seedbox_rtorrent_config_dir }}:/data"
  #     - "{{ seedbox_media_dir }}:/downloads"
  #   labels:
  #     - "traefik.enable=true"
  #     - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
  #     - "traefik.http.routers.seedbox-rtorrent.rule=Host(`{{ seedbox_rtorrent_domain }}`)"
  #     - "traefik.http.routers.seedbox-rtorrent.tls=true"
  #     - "traefik.http.routers.seedbox-rtorrent.tls.certresolver=seedbox-resolver"
  #     - "traefik.http.routers.seedbox-rtorrent.service=seedbox-rtorrent"
  #     - "traefik.http.services.seedbox-rtorrent.loadbalancer.server.port=8080"
  #     - "traefik.http.routers.seedbox-rtorrent.middlewares=seedbox-auth-bridgetroll-mw"

  hydra2:
    image: linuxserver/nzbhydra2
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_hydra2_config_dir }}:/config"
      - "{{ seedbox_usenet_watch_dir }}:/downloads"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-hydra2.rule=Host(`{{ seedbox_hydra2_domain }}`)"
      - "traefik.http.routers.seedbox-hydra2.tls=true"
      - "traefik.http.routers.seedbox-hydra2.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-hydra2.service=seedbox-hydra2"
      - "traefik.http.services.seedbox-hydra2.loadbalancer.server.port=5076"
      - "traefik.http.routers.seedbox-hydra2.middlewares=seedbox-auth-bridgetroll-mw"

  jackett:
    #image: linuxserver/jackett
    # For now, I have to build this image on the remote server out of band
    # docker build . -t local/tailored-jackett:manual
    image: ghcr.io/linuxserver/jackett
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
      AUTO_UPDATE: "true" # recommended by jackett
      #RUN_OPTS: <run options here> #optional
    volumes:
      - "{{ seedbox_jackett_config_dir }}:/config"
      - "{{ seedbox_jackett_blackhole_dir }}:/downloads"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-jackett.rule=Host(`{{ seedbox_jackett_domain }}`)"
      - "traefik.http.routers.seedbox-jackett.tls=true"
      - "traefik.http.routers.seedbox-jackett.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-jackett.service=seedbox-jackett"
      - "traefik.http.services.seedbox-jackett.loadbalancer.server.port=9117"
      - "traefik.http.routers.seedbox-jackett.middlewares=seedbox-auth-bridgetroll-mw"

  prowlarr:
    image: ghcr.io/linuxserver/prowlarr:latest
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_prowlarr_config_dir }}:/config"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-prowlarr.rule=Host(`{{ seedbox_prowlarr_domain }}`)"
      - "traefik.http.routers.seedbox-prowlarr.tls=true"
      - "traefik.http.routers.seedbox-prowlarr.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-prowlarr.service=seedbox-prowlarr"
      - "traefik.http.services.seedbox-prowlarr.loadbalancer.server.port=9696"
      - "traefik.http.routers.seedbox-prowlarr.middlewares=seedbox-auth-bridgetroll-mw"

  cops:
    image: linuxserver/cops
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_cops_config_dir }}:/config"
      - "{{ seedbox_media.books }}/Calibre:/books"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-cops.rule=Host(`{{ seedbox_cops_domain }}`)"
      - "traefik.http.routers.seedbox-cops.tls=true"
      - "traefik.http.routers.seedbox-cops.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-cops.service=seedbox-cops"
      - "traefik.http.services.seedbox-cops.loadbalancer.server.port=80"
      - "traefik.http.routers.seedbox-cops.middlewares=seedbox-auth-bridgetroll-mw"

  stash:
    image: local/x3:ansibuilt
    environment:
      USER: "{{ seedbox_uid }}"
      STASH_STASH: /data/stash
      STASH_GENERATED: /data/generated
      STASH_METADATA: /data/metadata
      STASH_CACHE: /data/cache
      STASH_CONFIG_FILE: /config/stash.yml
    # Note that this requires we _also_ set the USER environment variable
    user: "{{ seedbox_uid }}"
    volumes:
      - "{{ seedbox_stash_config_dir }}:/config"
      - "{{ seedbox_media.trix }}:/data"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-stash.rule=Host(`{{ seedbox_stash_domain }}`)"
      - "traefik.http.routers.seedbox-stash.tls=true"
      - "traefik.http.routers.seedbox-stash.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-stash.service=seedbox-stash"
      - "traefik.http.services.seedbox-stash.loadbalancer.server.port=9999"
      - "traefik.http.routers.seedbox-stash.middlewares=seedbox-auth-bridgetroll-mw"

  shhh:
    image: local/shhh:ansibuilt
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_shhh_config_dir }}:/config"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-shhh.rule=Host(`{{ seedbox_shhh_domain }}`)"
      - "traefik.http.routers.seedbox-shhh.tls=true"
      - "traefik.http.routers.seedbox-shhh.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-shhh.service=seedbox-shhh"
      - "traefik.http.services.seedbox-shhh.loadbalancer.server.port=6969"
      - "traefik.http.routers.seedbox-shhh.middlewares=seedbox-auth-bridgetroll-mw"

  lazylibrarian:
    image: ghcr.io/linuxserver/lazylibrarian
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
      DOCKER_MODS: "linuxserver/mods:lazylibrarian-ffmpeg|linuxserver/mods:universal-calibre"
    volumes:
      - "{{ seedbox_lazylibrarian_config_dir }}:/config"
      # - "{{ seedbox_media.books }}/Calibre:/books"
      - "{{ seedbox_media_dir }}:/media"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-lazylibrarian.rule=Host(`{{ seedbox_lazylibrarian_domain }}`)"
      - "traefik.http.routers.seedbox-lazylibrarian.tls=true"
      - "traefik.http.routers.seedbox-lazylibrarian.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-lazylibrarian.service=seedbox-lazylibrarian"
      - "traefik.http.services.seedbox-lazylibrarian.loadbalancer.server.port=5299"
      - "traefik.http.routers.seedbox-lazylibrarian.middlewares=seedbox-auth-bridgetroll-mw"

  ersatztv:
    image: jasongdove/ersatztv:develop
    environment:
      TZ: "{{ seedbox_timezone }}"
      # We don't have in-container support for non-root users,
      # but with "user:..." below and setting XDG_DATA_HOME here,
      # we can force it.
      # <https://github.com/jasongdove/ErsatzTV/issues/327>
      # ...
      # except that doesn't work well, because then the container can't persist its cache,
      # giving warnings like "Neither user profile nor HKLM registry available" when it starts.
      XDG_DATA_HOME: /config
      #HOME: /root/customhome
    volumes:
      - "{{ seedbox_ersatztv_config_dir }}/xdg_data_home:/config"
      #- "{{ seedbox_ersatztv_config_dir }}/roothome:/root/customhome"
      - "{{ seedbox_media_root }}:/media:ro"
    networks:
      - dernetverk
    #user: "{{ seedbox_uid }}"
    ports:
      # This is required for clients to be able to connect to it
      # Note that Plex also requires an HTTP connection to this port for the guide
      - "8409:8409"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-ersatztv.rule=Host(`{{ seedbox_ersatztv_domain }}`)"
      - "traefik.http.routers.seedbox-ersatztv.tls=true"
      - "traefik.http.routers.seedbox-ersatztv.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-ersatztv.service=seedbox-ersatztv"
      - "traefik.http.services.seedbox-ersatztv.loadbalancer.server.port=8409"
      - "traefik.http.routers.seedbox-ersatztv.middlewares=seedbox-auth-bridgetroll-mw"

  tautulli:
    image: tautulli/tautulli
    volumes:
      - "{{ seedbox_tautulli_config_dir }}:/config"
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-tautulli.rule=Host(`{{ seedbox_tautulli_domain }}`)"
      - "traefik.http.routers.seedbox-tautulli.tls=true"
      - "traefik.http.routers.seedbox-tautulli.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-tautulli.service=seedbox-tautulli"
      - "traefik.http.routers.seedbox-tautulli.middlewares=seedbox-auth-bridgetroll-mw"
      - "traefik.http.services.seedbox-tautulli.loadbalancer.server.port=8181"

  heimdall:
    image: ghcr.io/linuxserver/heimdall
    environment:
      PUID: "{{ seedbox_uid }}"
      PGID: "{{ seedbox_gid }}"
      TZ: "{{ seedbox_timezone }}"
    volumes:
      - "{{ seedbox_heimdall_config_dir }}:/config"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.seedbox-heimdall.rule=Host(`{{ seedbox_misc_domain }}`)"
      - "traefik.http.routers.seedbox-heimdall.tls=true"
      - "traefik.http.routers.seedbox-heimdall.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-heimdall.service=seedbox-heimdall"
      - "traefik.http.routers.seedbox-heimdall.middlewares=seedbox-auth-bridgetroll-mw"
      - "traefik.http.services.seedbox-heimdall.loadbalancer.server.port=80"

  dex:
    image: dexidp/dex
    volumes:
      - /etc/localtime:/etc/localtime:ro
    # UID and GID of the dex user isn't configurable -- have to map the config to UID/GID 1001
    configs:
      - source: dex_config
        target: /config.yml
        uid: "1001"
        gid: "1001"
        mode: 0600
    volumes:
      - "{{ seedbox_dex_config_dir }}/db:/dexdb"
      - "{{ seedbox_dex_config_dir }}/mindcontrol:/srv/dex/web/themes/mindcontrol"
    networks:
      - dernetverk
    command: ['dex', 'serve','/config.yml']
    labels:
      - traefik.enable=true
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
      - "traefik.http.routers.seedbox-dex.rule=Host(`{{ seedbox_dex_domain }}`)"
      - "traefik.http.routers.seedbox-dex.tls=true"
      - "traefik.http.routers.seedbox-dex.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-dex.entrypoints=https"
      - "traefik.http.routers.seedbox-dex.service=seedbox-dex"
      - "traefik.http.services.seedbox-dex.loadbalancer.server.port=5556"

  # traefik forward auth
  # A bridge troll is a kind of authenticator
  bridgetroll:
    image: thomseddon/traefik-forward-auth:2
    environment:
      DEFAULT_PROVIDER: oidc
      PROVIDERS_OIDC_CLIENT_ID: "{{ seedbox_dex_client_id }}"
      PROVIDERS_OIDC_CLIENT_SECRET: "{{ seedbox_dex_client_secret }}"
      PROVIDERS_OIDC_ISSUER_URL: https://{{ seedbox_dex_domain }}
      SECRET: "{{ seedbox_tfa_secret }}"
      AUTH_HOST: "{{ seedbox_tfa_domain }}"
      COOKIE_DOMAIN: "{{ seedbox_root_domain }}"
      LOG_LEVEL: debug
    networks:
      - dernetverk
    labels:
      - traefik.enable=true
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
      - "traefik.http.routers.seedbox-bridgetroll.rule=Host(`{{ seedbox_tfa_domain }}`)"
      - "traefik.http.routers.seedbox-bridgetroll.entrypoints=https"
      - "traefik.http.routers.seedbox-bridgetroll.tls=true"
      - "traefik.http.routers.seedbox-bridgetroll.tls.domains[0].main={{ seedbox_root_domain }}"
      - "traefik.http.routers.seedbox-bridgetroll.tls.domains[0].sans=*.{{ seedbox_root_domain }}"
      - "traefik.http.routers.seedbox-bridgetroll.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-bridgetroll.service=seedbox-bridgetroll"
      - "traefik.http.services.seedbox-bridgetroll.loadbalancer.server.port=4181"
      - "traefik.http.middlewares.seedbox-auth-bridgetroll-mw.forwardauth.address=http://bridgetroll:4181"
      - "traefik.http.middlewares.seedbox-auth-bridgetroll-mw.forwardauth.trustForwardHeader=true"
      - "traefik.http.middlewares.seedbox-auth-bridgetroll-mw.forwardauth.authResponseHeaders=X-Forwarded-User"
      - "traefik.http.routers.seedbox-bridgetroll.middlewares=seedbox-auth-bridgetroll-mw"

  whoami:
    image: containous/whoami:latest
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
      - "traefik.http.routers.seedbox-whoami.rule=Host(`{{ seedbox_whoami_domain }}`)"
      - "traefik.http.routers.seedbox-whoami.entrypoints=https"
      - "traefik.http.routers.seedbox-whoami.tls=true"
      - "traefik.http.routers.seedbox-whoami.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-whoami.service=seedbox-whoami"
      - "traefik.http.services.seedbox-whoami.loadbalancer.server.port=80"
      - "traefik.http.routers.seedbox-whoami.middlewares=seedbox-auth-bridgetroll-mw"

  elastic:
    image: docker.elastic.co/elasticsearch/elasticsearch:8.13.3
    environment:
      ES_JAVA_OPTS: -Xms2g -Xmx2g
      ELASTIC_PASSWORD: "{{ seedbox_elastic_password }}"
    networks:
      - dernetverk
    volumes:
      - "{{ seedbox_elastic_config_dir }}/elasticsearch.yml:/usr/share/elasticsearch/config/elasticsearch.yml"
      - "{{ seedbox_elastic_config_dir }}/data:/usr/share/elasticsearch/data"
    healthcheck:
      test: "curl -s http://localhost:9200 | grep -q 'missing authentication credentials'"
      interval: 10s
      timeout: 10s
      retries: 120

  kibana:
    image: docker.elastic.co/kibana/kibana:8.13.3
    depends_on:
      - elastic
    environment:
      SERVER_NAME: "{{ seedbox_kibana_domain }}"
    volumes:
      - "{{ seedbox_kibana_config_dir }}/config:/usr/share/kibana/config"
      - "{{ seedbox_kibana_config_dir }}/data:/usr/share/kibana/data"
      - "{{ seedbox_kibana_config_dir }}/logs:/var/log/kibana"
      - "{{ seedbox_kibana_config_dir }}/favicons:/usr/share/kibana/src/core/server/core_app/assets/favicons"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
      - "traefik.http.routers.seedbox-kibana.rule=Host(`{{ seedbox_kibana_domain }}`)"
      - "traefik.http.routers.seedbox-kibana.entrypoints=https"
      - "traefik.http.routers.seedbox-kibana.tls=true"
      - "traefik.http.routers.seedbox-kibana.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-kibana.service=seedbox-kibana"
      - "traefik.http.services.seedbox-kibana.loadbalancer.server.port=5601"
      - "traefik.http.routers.seedbox-kibana.middlewares=seedbox-auth-bridgetroll-mw"

  logstash:
    image: docker.elastic.co/logstash/logstash:8.13.3
    depends_on:
      - elastic
    ports:
      ## GELF (graylog format) log ingestion endpoint
      #- "{{ seedbox_logstash_gelf_port }}:{{ seedbox_logstash_gelf_port }}/udp"
      ## Regular syslog format ingestion endpoint
      #- "{{ seedbox_logstash_syslogudp_port }}:{{ seedbox_logstash_syslogudp_port }}/udp"
      # syslog format ingestion endpoint for Docker to use (so logstash can grok filter it)
      - "{{ seedbox_logstash_docker_port }}:{{ seedbox_logstash_docker_port }}/udp"
    networks:
      - dernetverk
    deploy:
      mode: global
    volumes:
      - "{{ seedbox_logstash_config_dir }}/logstash.yml:/usr/share/logstash/config/logstash.yml"
      - "{{ seedbox_logstash_config_dir }}/pipelines.yml:/usr/share/logstash/config/pipelines.yml"
      - "{{ seedbox_logstash_config_dir }}/pipelines:/usr/share/logstash/pipelines"

  filebeater-container-logfiles:
    image: docker.elastic.co/beats/filebeat:8.13.3
    user: root
    depends_on:
      - logstash
    networks:
      - dernetverk
    deploy:
      mode: global
    volumes:
      - "{{ seedbox_config_dir }}:/seedbox"
      - "{{ seedbox_filebeat_config_dir }}/container-logfiles.yml:/usr/share/filebeat/filebeat.yml:ro"
      - /var/lib/docker/containers:/var/lib/docker/containers:ro
      - /var/run/docker.sock:/var/run/docker.sock:ro

  tor:
    image: local/tor:ansibuilt
    volumes:
      - "{{ seedbox_tor_config_dir }}/torrc:/etc/tor/torrc:ro"
    networks:
      - dernetverk

  torprivoxy:
    image: local/privoxy:ansibuilt
    volumes:
      - "{{ seedbox_torprivoxy_config_dir }}/config:/etc/privoxy/config:ro"
    networks:
      - dernetverk

  onionproxy:
    image: nginx:latest
    volumes:
      - "{{ seedbox_onionproxy_config_dir }}/nginx.conf:/etc/nginx/nginx.conf:ro"
      - "{{ seedbox_onionproxy_config_dir }}/html:/html:ro"
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"
      # We listen on both HTTP and HTTPS for this service.
      # Note that allowing HTTP ingress requires an exception in the global redirect to HTTPS
      # on the balancer service.
      - "traefik.http.routers.seedbox-onionproxy-http.rule=HostRegexp(`{subdomain:[a-zA-Z0-9]+}.{{ seedbox_onionproxy_domain }}`) || Host(`{{ seedbox_onionproxy_domain }}`)"
      - "traefik.http.routers.seedbox-onionproxy-http.entrypoints=http"
      - "traefik.http.routers.seedbox-onionproxy-http.service=seedbox-onionproxy"
      - "traefik.http.services.seedbox-onionproxy.loadbalancer.server.port=80"
      - "traefik.http.routers.seedbox-onionproxy-https.rule=HostRegexp(`{subdomain:[a-zA-Z0-9]+}.{{ seedbox_onionproxy_domain }}`) || Host(`{{ seedbox_onionproxy_domain }}`)"
      - "traefik.http.routers.seedbox-onionproxy-https.entrypoints=https"
      - "traefik.http.routers.seedbox-onionproxy-https.tls=true"
      - "traefik.http.routers.seedbox-onionproxy-https.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-onionproxy-https.service=seedbox-onionproxy"
      # Don't require auth for the onionproxy
      # - "traefik.http.routers.seedbox-onionproxy-https.middlewares=seedbox-auth-bridgetroll-mw"

  balancer:
    image: traefik:2.5
    command: --web --docker --docker.swarmMode --docker.watch --docker.domain={{ seedbox_balancer_domain }} --logLevel=DEBUG
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8080:8080/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ seedbox_traefik_config_file }}:/traefik.yml:ro"
      - "{{ seedbox_traefik_acme_json }}:/acme.json"
      - "{{ seedbox_traefik_aws_creds_file }}:/root/.aws/credentials"
    environment:
      - AWS_REGION={{ seedbox_acme_aws_region }}
      - AWS_HOSTED_ZONE_ID={{ seedbox_acme_aws_zone }}
    labels:
      # Dashboard
      # WARNING: A TRAILING SLASH IS MANDATORY IN THE BROWSER
      # e.g. https://example.com/dashboard/, not merely /dashboard
      - "traefik.http.routers.seedbox-traefik-api.rule=Host(`{{ seedbox_balancer_domain }}`)&&(PathPrefix(`/api`)||PathPrefix(`/dashboard`)||PathPrefix(`/debug`))"
      - "traefik.http.routers.seedbox-traefik-api.service=api@internal"
      - "traefik.http.routers.seedbox-traefik-api.tls.certresolver=seedbox-resolver"
      - "traefik.http.routers.seedbox-traefik-api.entrypoints=https"
      - "traefik.http.routers.seedbox-traefik-api.middlewares=seedbox-auth-bridgetroll-mw"

      # global redirect to https
      # Note the EXCEPTIONS to the HostRegexp that allow some hosts to be HTTP!
      - "traefik.http.routers.http-catchall.rule=HostRegexp(`{host:.+}`) && !HostRegexp(`{subdomain:[a-zA-Z0-9]+}.{{ seedbox_onionproxy_domain }}`) && !Host(`{{ seedbox_onionproxy_domain }}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # Without this, traefik can get confused and forward traffic to wrong IPs
      # https://community.traefik.io/t/traefik-routes-to-the-wrong-http-service-ip/5076
      #- "traefik.docker.network={{ seedbox_stack_name }}_dernetverk"

    networks:
      - dernetverk
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager
    # If you enabled this, traefik will fucking COMMIT SUICIDE IF IT CANT TALK TO THE LOG DAEMON,
    # amazing
    # logging:
    #   driver: gelf
    #   options:
    #     gelf-address: "udp://logstash:{{ seedbox_logstash_traefik_port }}"

configs:
  dex_config:
    file: "{{ seedbox_dex_config_dir }}/config.yml"
    name: dex_config_{{ seedbox_dex_config_hash }}

networks:
  dernetverk:
    driver: overlay
    # attachable lets us run containers on the command line that have access to the network
    attachable: true
