---

- name: Add synology server to known_hosts
  known_hosts:
    name: "{{ acmedns_syno_updater_syn_server }}"
    key: "{{ acmedns_syno_updater_syn_server_pubkey }}"
  become: yes
  become_user: "{{ acmedns_syno_updater_user }}"

- name: Install script
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: "{{ acmedns_syno_updater_group }}"
    mode: "0750"
  with_items:
    - src: acmedns_update.sh.j2
      dest: "{{ acmedns_syno_updater_script_path }}"

- name: Install Python script for running on the Synology itself
  copy:
    src: syno-tls-update.py
    dest: "{{ acmedns_syno_updater_on_synology_script }}"
    owner: root
    group: root
    mode: "0755"

- name: Configure cronvar
  cronvar:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    cron_file: "{{ acmedns_syno_updater_cron_file }}"
  with_items:
    - name: MAILTO
      value: "{{ acmedns_syno_updater_email }}"

- name: Configure cronjob
  cron:
    name: "{{ acmedns_syno_updater_job_name }}"
    day: "*"
    hour: "3"
    minute: "47"
    job: "{{ acmedns_syno_updater_script_path }}"
    user: "{{ acmedns_syno_updater_user }}"
    cron_file: "{{ acmedns_syno_updater_cron_file }}"

- name: Run wrapper script once
  # Wrapper script passes --days, so this won't contact Let's Encrypt unless necessary
  command: "{{ acmedns_syno_updater_script_path }}"
  become: yes
  become_user: "{{ acmedns_syno_updater_user }}"
  when: acmedns_syno_updater_runonce|bool

- name: Allow all users to run wrapper script as our user
  lineinfile:
    path: /etc/sudoers.d/acmedns_{{ acmedns_syno_updater_job_name }}
    line: "ALL ALL=({{ acmedns_syno_updater_user }}) NOPASSWD: {{ acmedns_syno_updater_script_path }}"
    owner: root
    group: root
    mode: "0640"
    create: yes
    validate: visudo -cf %s

- name: Install hook
  template:
    src: hook.json.j2
    dest: "{{ capthook_webhooks_dir }}/acmedns_{{ acmedns_syno_updater_job_name }}.hook.json"
    owner: "{{ capthook_user }}"
    group: "{{ capthook_user }}"
    mode: "0644"
  notify: restart capthook

- name: Manage SELinux on Fedora
  block:
  - name: Copy SELinux type enforcement file
    template:
      src: acmedns_syno_updater_webhook.te.j2
      dest: /etc/selinux/acmedns_syno_updater_webhook_{{ acmedns_syno_updater_job_name }}
    register: acmedns_syno_updater_copytefile
  - name: Compile SELinux module file
    command: >
      checkmodule -M -m
      -o /etc/selinux/acmedns_syno_updater_webhook_{{ acmedns_syno_updater_job_name }}.mod
      /etc/selinux/acmedns_syno_updater_webhook_{{ acmedns_syno_updater_job_name }}
    when: acmedns_syno_updater_copytefile.changed
  - name: Build SELinux policy package
    command: >
      semodule_package
      -o /etc/selinux/acmedns_syno_updater_webhook_{{ acmedns_syno_updater_job_name }}.pp
      -m /etc/selinux/acmedns_syno_updater_webhook_{{ acmedns_syno_updater_job_name }}.mod
    when: acmedns_syno_updater_copytefile.changed
  - name: Load SELinux policy package
    command: >
      semodule -i
      /etc/selinux/acmedns_syno_updater_webhook_{{ acmedns_syno_updater_job_name }}.pp
    when: acmedns_syno_updater_copytefile.changed
    notify: restart capthook
  when: ansible_distribution == "Fedora"

