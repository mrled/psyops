---
- name: Install prereqs
  apt:
    name:
    - apt-transport-https
    - python3-lxml
- name: Add apt signing key
  apt_key:
    url: https://syncthing.net/release-key.txt
    state: present
- name: Add apt repo
  apt_repository:
    repo: deb https://apt.syncthing.net/ syncthing stable
    filename: syncthing
    state: present
  register: syncthing_add_apt_repo_result
- name: Install syncthing
  apt:
    name: syncthing
    update_cache: "{{ syncthing_add_apt_repo_result.changed }}"
- name: Enable and start syncthing
  systemd:
    name: "{{ syncthing_personal_service }}"
    state: started
    enabled: yes

- name: Getent for home
  getent:
    database: passwd
    key: "{{ syncthing_personal_user }}"
- name: Set home fact
  set_fact:
    syncthing_personal_home: "{{ getent_passwd[syncthing_personal_user][4] }}"

- name: Get API key
  xml:
    path: "{{ syncthing_personal_config_xml }}"
    xpath: /configuration/gui/apikey
    content: text
  register: syncthing_personal_apikey_result
- name: Get API endpoint
  xml:
    path: "{{ syncthing_personal_config_xml }}"
    xpath: /configuration/gui/address
    content: text
  register: syncthing_personal_address_result
- set_fact:
    syncthing_personal_apikey: "{{ syncthing_personal_apikey_result.matches[0].apikey }}"
    syncthing_personal_address: "{{ syncthing_personal_address_result.matches[0].address }}"
- name: Get system status
  uri:
    url: "http://{{ syncthing_personal_address }}/rest/system/status"
    headers:
      "X-API-KEY": "{{ syncthing_personal_apikey }}"
  register: syncthing_personal_status_result
- name: Set facts
  set_fact:
    syncthing_personal_id: "{{ syncthing_personal_status_result.json.myID }}"
- name: Show ID
  debug:
    msg: "Syncthing at {{ syncthing_personal_address }} has personal ID: {{ syncthing_personal_id }}"
# - debug:
#     msg: "API key (secret): {{ syncthing_personal_apikey }}"

- name: Create default folder path
  file:
    state: directory
    path: "{{ syncthing_personal_default_folder_path }}"
    owner: "{{ syncthing_personal_user }}"


# To configure syncthing, you have to GET the existing configuration over the REST API,
# make whatever changes you want to the resulting JSON document,
# and then POST the new, complete config file back to the REST API.

- name: Get current configuration
  uri:
    url: "http://{{ syncthing_personal_address }}/rest/system/config"
    headers:
      "X-API-KEY": "{{ syncthing_personal_apikey }}"
  register: syncthing_personal_config_result

- set_fact:
    syncthing_personal_old_config: "{{ syncthing_personal_config_result.json }}"
- set_fact:
    syncthing_personal_config_update:
      # Combine two lists of dicts, where if any dict has the same 'deviceID' key as another dict,
      # use the dict from the 'syncthing_personal_add_devices' list of dicts.
      # See also filter_plugins/dictlist_helpers.py.
      devices: "{{ syncthing_personal_old_config.devices | dictlist_combine_uniqkey(syncthing_personal_add_devices, 'deviceID') }}"
      options:
        defaultFolderPath: "{{ syncthing_personal_default_folder_path }}"

- set_fact:
    # Apply the newer config on top of the older config
    # See also the docs for the Jinja2 combine filter
    syncthing_personal_new_config: "{{ syncthing_personal_old_config | combine(syncthing_personal_config_update) }}"

- name: Save filesystem copies for debugging
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.dest }}"
    owner: "{{ syncthing_personal_user }}"
  with_items:
    - dest: "{{ syncthing_personal_config_dir }}/restapi_system_config.old.json"
      content: "{{ syncthing_personal_old_config | to_nice_json(indent=2) }}"
    - dest: "{{ syncthing_personal_config_dir }}/restapi_system_config.update.json"
      content: "{{ syncthing_personal_config_update | to_nice_json(indent=2) }}"
    - dest: "{{ syncthing_personal_config_dir }}/restapi_system_config.set.json"
      content: "{{ syncthing_personal_new_config | to_nice_json(indent=2) }}"

- name: Show new config (pre-update)
  debug: var=syncthing_personal_new_config

- name: Set updated configuration
  uri:
    url: "http://{{ syncthing_personal_address }}/rest/system/config"
    headers:
      "X-API-KEY": "{{ syncthing_personal_apikey }}"
    body: "{{ syncthing_personal_new_config }}"
    body_format: json
    method: POST
  register: syncthing_personal_set_config_result
- name: Save filesystem copy of result config for debugging
  copy:
    content: "{{ item.content }}"
    dest: "{{ item.dest }}"
    owner: "{{ syncthing_personal_user }}"
  with_items:
    - dest: "{{ syncthing_personal_config_dir }}/restapi_system_config.result.json"
      content: "{{ syncthing_personal_set_config_result | to_nice_json(indent=2) }}"

- name: Show config posts-update
  debug: var=syncthing_personal_set_config_result
