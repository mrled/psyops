---

- name: Install offlineimap packages
  package:
    name:
      - offlineimap
    state: latest

- name: Install Debian-specific prerequisites
  apt:
    name:
      - cifs-utils
    state: latest
  when: ansible_distribution in ["Debian", "Ubuntu"]

- name: Update CA certs
  command: update-ca-certificates

- name: Add mailbackup user
  user:
    name: "{{ mailbackup_username }}"
    system: yes
    create_home: yes
    home: "{{ mailbackup_homedir }}"

- name: Copy offlineimap config file
  template:
    src: offlineimap.conf.j2
    dest: "{{ mailbackup_homedir }}/.offlineimaprc"
    owner: "{{ mailbackup_username }}"
    mode: "0600"

- name: Create mailbackup mountpoints
  file:
    state: directory
    path: "{{ item.path }}"
    owner: root
    group: root
    mode: "0755"
  with_items: "{{ mailbackup_mountpoints }}"

- name: Configure mailbackup mount files
  copy:
    content: |+
      username={{ item.username }}
      password={{ item.password }}
    dest: "{{ item.credsfile }}"
    owner: root
    group: root
    mode: "0600"
  with_items: "{{ mailbackup_mountpoints }}"

- name: Mount mailbackup mounts
  vars:
    mailbackup_mount_args:
      - credentials={{ item.credsfile }}
      - uid={{ item.mountowner }}
      - x-systemd.automount
      - x-systemd.requires=network-online.target
      - vers=3
  mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    fstype: "{{ item.fstype }}"
    opts: "{{ mailbackup_mount_args | join(',') }}"
    state: mounted
  with_items: "{{ mailbackup_mountpoints }}"
  tags: netmount

- name: Make Maildirs
  file:
    path: "{{ mailbackup_share_mountpoint }}/Maildirs"
    state: directory
    owner: "{{ mailbackup_username }}"
    mode: "0700"

- name: Copy wrapper script
  template:
    src: offlineimap_wrapper.sh.j2
    dest: "{{ mailbackup_script_path }}"
    owner: root
    group: root
    mode: "0755"

- name: Configure cronvar
  cronvar:
    name: MAILTO
    value: "{{ mailbackup_report_email }}"
    cron_file: "{{ mailbackup_cron_file }}"

- name: Configure cronjob
  cron:
    name: mailbackup-offlineimap
    minute: "0"
    hour: "*/6"
    job: "{{ mailbackup_script_path }}"
    user: "{{ mailbackup_username }}"
    cron_file: "{{ mailbackup_cron_file }}"

- name: Allow all users to run wrapper script as our user
  lineinfile:
    path: /etc/sudoers.d/{{ mailbackup_hook_name }}
    line: "ALL ALL=({{ mailbackup_username }}) NOPASSWD: {{ mailbackup_script_path }}"
    owner: root
    group: root
    mode: "0640"
    create: yes
    validate: visudo -cf %s

- name: Install hook
  template:
    src: hook.json.j2
    dest: "{{ capthook_webhooks_dir }}/{{ mailbackup_hook_name }}.hook.json"
    owner: "{{ capthook_user }}"
    group: "{{ capthook_user }}"
    mode: "0644"
  notify: restart capthook

