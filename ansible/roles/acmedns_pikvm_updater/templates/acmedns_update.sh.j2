#!/bin/sh
set -eux

export AWS_REGION={{ acmedns_pikvm_updater_aws_region }}
export AWS_ACCESS_KEY_ID={{ acmedns_pikvm_updater_aws_access_key }}
export AWS_SECRET_ACCESS_KEY={{ acmedns_pikvm_updater_aws_secret_key }}
export AWS_HOSTED_ZONE_ID={{ acmedns_pikvm_updater_aws_zone_id }}

date=$(date +%Y%m%d)
pikvmuser="{{ acmedns_pikvm_updater_server_user }}"
pikvmhost="{{ acmedns_pikvm_updater_server }}"
sshremote="$pikvmuser@$pikvmhost"
updatercertdir="{{ acmedns_pikvm_updater_certificate_dir }}"
updaterkeypath="$updatercertdir/certificates/$pikvmhost.key"
updatercrtpath="$updatercertdir/certificates/$pikvmhost.crt"
pikvmdomain="{{ acmedns_pikvm_updater_domain }}"
certdir=/etc/kvmd/nginx/ssl

echoexec() { echo "Running: $*"; $*; }

# TODO: is this still valid for the 2.x firmware?
# The java code that runs the Unifi Controller interface on :8443 on a pikvm
# can't understand ec384 certs, which are the lego default.
# So we have to force it to use rsa4096.
# Crazy-making, because the nginx that runs the landing page and control pannel on :443
# and the node app that runs the NVR controller interface on :7443 work just fine with them.
# If you're getting errors like this on :8443 after installing a cert:
#   curl: (35) error:14004410:SSL routines:CONNECT_CR_SRVR_HELLO:sslv3 alert handshake failure
# ... then your cert might need to be generated as RSA
echoexec /usr/local/bin/wraplego.py \
    --verbose \
    --legodir "{{ acmedns_pikvm_updater_certificate_dir }}" \
    --email "{{ acmedns_pikvm_updater_email }}" \
    --domain "{{ acmedns_pikvm_updater_domain }}" \
    --key-type rsa4096 \
    --authenticator "route53"



scp "$updatercrtpath" "$sshremote":/tmp/server.crt
scp "$updaterkeypath" "$sshremote":/tmp/server.key

echo "$(cat <<ENDSSH
rw
mv '$certdir/server.crt' '$certdir/server.$date.crt'
mv '$certdir/server.key' '$certdir/server.$date.key'
mv /tmp/server.crt '$certdir/server.crt'
mv /tmp/server.key '$certdir/server.key'
chown root:kvmd-nginx '$certdir/server.crt' '$certdir/server.key'
chmod 0644 '$certdir/server.crt'
chmod 0600 '$certdir/server.key'
ro
systemctl restart kvmd-nginx
ENDSSH
)" | ssh "$sshremote"
