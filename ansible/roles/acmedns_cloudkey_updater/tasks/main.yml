---

- name: Add cloudkey to known_hosts
  known_hosts:
    name: "{{ acmedns_cloudkey_updater_server }}"
    key: "{{ acmedns_cloudkey_updater_host_ssh_pubkey }}"
  become: yes
  become_user: "{{ acmedns_cloudkey_updater_user }}"

- name: Create local certificate dir
  file:
    path: "{{ acmedns_cloudkey_updater_certificate_dir }}"
    state: directory
    owner: "{{ acmedns_cloudkey_updater_user }}"
    group: "{{ acmedns_cloudkey_updater_group }}"
    mode: "0700"

- name: Install script
  template:
    src: "{{ item.src }}"
    dest: "{{ item.dest }}"
    owner: root
    group: "{{ acmedns_cloudkey_updater_group }}"
    mode: "0750"
  with_items:
    - src: acmedns_update.sh.j2
      dest: "{{ acmedns_cloudkey_updater_script_path }}"

- name: Configure cronvar
  cronvar:
    name: "{{ item.name }}"
    value: "{{ item.value }}"
    cron_file: "{{ acmedns_cloudkey_updater_cron_file }}"
  with_items:
    - name: MAILTO
      value: "{{ acmedns_cloudkey_updater_email }}"

- name: Configure cronjob
  cron:
    name: "{{ acmedns_cloudkey_updater_job_name }}"
    day: "*"
    hour: "3"
    minute: "47"
    job: "{{ acmedns_cloudkey_updater_script_path }}"
    user: "{{ acmedns_cloudkey_updater_user }}"
    cron_file: "{{ acmedns_cloudkey_updater_cron_file }}"

- name: Install hook
  template:
    src: hook.json.j2
    dest: "{{ capthook_webhooks_dir }}/acmedns_{{ acmedns_cloudkey_updater_job_name }}.hook.json"
    owner: "{{ capthook_user }}"
    group: "{{ capthook_user }}"
    mode: "0644"
  notify: restart capthook

- name: Run wrapper script once
  # Wrapper script passes --days, so this won't contact Let's Encrypt unless necessary
  command: "{{ acmedns_cloudkey_updater_script_path }}"
  become: yes
  become_user: "{{ acmedns_cloudkey_updater_user }}"
  when: acmedns_cloudkey_updater_runonce|bool
