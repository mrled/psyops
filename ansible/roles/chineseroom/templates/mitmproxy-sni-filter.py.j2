#!/usr/bin/env python3
"""
mitmproxy addon to filter TLS connections by SNI without decrypting TLS.
Only allows connections to whitelisted domains.
"""
from mitmproxy import ctx, tls


# Get whitelist from jinja2
WHITELIST = {
{% for domain in chineseroom_whitelist_domains %}
    "{{ domain }}",
{% endfor %}
}

def is_allowed(sni: str) -> bool:
    """Check if the SNI is in the whitelist."""
    sni = sni.lower()
    return any(sni == domain or sni.endswith("." + domain) for domain in WHITELIST)

class SNIFilter:
    """Mitmproxy addon to filter TLS connections based on SNI."""
    def tls_clienthello(self, data: tls.ClientHelloData):
        sni = data.client_hello.sni
        if not sni:
            ctx.log.warn("No SNI provided; blocking connection")
            data.fail = "Missing SNI"
            return

        if is_allowed(sni):
            ctx.log.info(f"Allowing connection to {sni}")
        else:
            ctx.log.warn(f"Blocking connection to non-whitelisted domain: {sni}")
            data.fail = "Connection to non-whitelisted domain blocked"

addons = [SNIFilter()]
