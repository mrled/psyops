---

- name: Install packages
  dnf:
    name:
      - python3-pip
    state: latest
    update_cache: yes

- name: Install pip packages
  pip:
    name:
      - passlib
    state: latest

- name: Add privnet group
  group:
    name: "{{ privnet_group }}"
    system: yes

- name: Add privnet user
  user:
    name: "{{ privnet_user }}"
    group: "{{ privnet_group }}"
    system: yes
    create_home: yes

- name: getent privnet
  getent:
    database: passwd
    key: "{{ privnet_user }}"
  register: privnet_getent

- name: Set UID/GID facts
  set_fact:
    privnet_uid: "{{ getent_passwd[privnet_user][1] }}"
    privnet_gid: "{{ getent_passwd[privnet_user][2] }}"
    privnet_homedir: "{{ getent_passwd[privnet_user][4] }}"

- name: Create privnet config dirs
  file:
    path: "{{ item }}"
    state: directory
    owner: "{{ privnet_user }}"
    group: "{{ privnet_group }}"
    mode: "0750"
  with_items:
    - "{{ privnet_config_dir }}"
    - "{{ privnet_traefik_config_dir }}"

- name: Create privnet mountpoints
  file:
    state: directory
    path: "{{ item.path }}"
    owner: "{{ privnet_user }}"
    group: "{{ privnet_group }}"
    mode: "0755"
  with_items: "{{ privnet_mount_list }}"

- name: Configure privnet mount files
  copy:
    content: |+
      username={{ item.username }}
      password={{ item.password }}
    dest: "{{ item.credsfile }}"
    owner: root
    group: root
    mode: "0600"
  with_items: "{{ privnet_mount_list }}"

- name: Mount privnet mounts
  mount:
    path: "{{ item.path }}"
    src: "{{ item.src }}"
    fstype: "{{ item.fstype }}"
    opts: credentials={{ item.credsfile }},uid={{ privnet_uid }},gid={{ privnet_gid }}
    state: mounted
  with_items: "{{ privnet_mount_list }}"

- name: Install privnet compose file
  template:
    src: privnet.compose.yml
    dest: "{{ privnet_compose_path }}"
    owner: "{{ privnet_user }}"
    group: "{{ privnet_group }}"
    mode: "0640"

- name: Configure firewall (Ubuntu)
  ufw: port={{ item.port }} proto={{ item.proto }} rule=allow
  when: ansible_distribution == "Ubuntu"
  with_items:
  - { port: 80, proto: tcp }
  - { port: 443, proto: tcp }

- name: Install traefik config
  template:
    src: traefik.yml.j2
    dest: "{{ privnet_traefik_config_file }}"
    owner: root
    group: root
    mode: "0600"
  tags: privnet_docker_deploy

- name: Install traefik AWS credentials
  template:
    src: aws_credentials.j2
    dest: "{{ privnet_traefik_aws_creds_file }}"
    owner: root
    group: root
    mode: "0600"
  tags: privnet_docker_deploy

- name: Ensure acme.json exists
  # Create an empty file if one isn't present
  # Do nothing if it already exists
  copy:
    content: ""
    dest: "{{ privnet_traefik_acme_json }}"
    force: no
    owner: root
    group: root
    mode: "0600"
  tags: privnet_docker_deploy

- name: Configure traefik htpasswd
  htpasswd:
    path: "{{ privnet_traefik_api_users_file }}"
    name: "{{ privnet_web_admin_user }}"
    password: "{{ privnet_web_admin_pass }}"
    owner: root
    group: root
    mode: "0600"
  tags: privnet_docker_deploy


- name: Deploy the Docker stack
  docker_stack:
    state: present
    name: privnet
    prune: yes
    compose:
      - "{{ privnet_compose_path }}"
  tags: privnet_docker_deploy

#
# Light configuration of our apps
# At least for now, we expect that these configs need to be backed up,
# because we will do lots of manual configuration as well.
# This just gets the basics.
#
