version: "3.7"

services:

  giteaweb:
    image: gitea/gitea:1.15.5
    environment:
      #- USER_UID=1000
      #- USER_GID=1000
      GITEA__database__DB_TYPE: postgres
      GITEA__database__HOST: giteadb:5432
      GITEA__database__NAME: gitea
      GITEA__database__USER: gitea
      GITEA__database__PASSWD: "{{ privnet_giteadb_gitea_password }}"
    networks:
      - privnet
    volumes:
      - giteaweb_data:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "{{ privnet_git_ssh_port }}:22"
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ privnet_stack_name }}_privnet"
      - "traefik.http.routers.privnet-giteaweb.rule=Host(`{{ privnet_giteaweb_domain }}`)"
      - "traefik.http.routers.privnet-giteaweb.tls=true"
      - "traefik.http.routers.privnet-giteaweb.tls.certresolver=privnet-resolver"
      - "traefik.http.routers.privnet-giteaweb.service=privnet-giteaweb"
      - "traefik.http.services.privnet-giteaweb.loadbalancer.server.port=3000"

  giteadb:
    image: postgres:13
    environment:
      POSTGRES_USER: gitea
      POSTGRES_PASSWORD: "{{ privnet_giteadb_gitea_password }}"
      POSTGRES_DB: gitea
    networks:
      - privnet
    volumes:
      - giteadb_data:/var/lib/postgresql/data

  jenkins:
    image: jenkins/jenkins:lts-jdk11
    networks:
      - privnet
    volumes:
      - jenkins_data:/var/jenkins_home
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ privnet_stack_name }}_privnet"
      - "traefik.http.routers.jenkins.rule=Host(`{{ privnet_jenkins_domain }}`)"
      - "traefik.http.routers.jenkins.entrypoints=https"
      - "traefik.http.routers.jenkins.tls=true"
      - "traefik.http.routers.jenkins.tls.certresolver=privnet-resolver"
      - "traefik.http.routers.jenkins.service=jenkins"
      - "traefik.http.services.jenkins.loadbalancer.server.port=8080"

{% for jinx in privnet_jenkins_agents %}
  jenkins-agent-{{ jinx.name }}:
    image: jenkins/inbound-agent
    init: true
    networks:
    - privnet
    command: -url http://jenkins:8080 {{ jinx.secret }} {{ jinx.name }}
{% endfor %}


  uptime-kuma:
    image: louislam/uptime-kuma:1
    networks:
      - privnet
    volumes:
      - uptime_kuma_data:/app/data
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ privnet_stack_name }}_privnet"
      - "traefik.http.routers.uptime-kuma.rule=Host(`{{ privnet_uptime_kuma_domain }}`)"
      - "traefik.http.routers.uptime-kuma.entrypoints=https"
      - "traefik.http.routers.uptime-kuma.tls=true"
      - "traefik.http.routers.uptime-kuma.tls.certresolver=privnet-resolver"
      - "traefik.http.routers.uptime-kuma.service=uptime-kuma"
      - "traefik.http.services.uptime-kuma.loadbalancer.server.port=3001"


  archivebox:
    image: archivebox/archivebox:master
    command: server --quick-init 0.0.0.0:8000
    #ports:
    #  - 8000:8000
    environment:
      PUID: {{ privnet_archivebox_uid }}
      PGID: {{ privnet_archivebox_gid }}
      TZ: US/Central
      USE_COLOR: "True"
      ALLOWED_HOSTS: "*"
      MEDIA_MAX_SIZE: 750m # youtube-dl might hit this
      SEARCH_BACKEND_ENGINE: sonic # sonic allows full text search
      SEARCH_BACKEND_HOST_NAME: sonic
      SEARCH_BACKEND_PASSWORD: "{{ privnet_archivebox_sonic_backend_password }}"
    volumes:
      - {{ privnet_archivebox_data_dir }}:/data
    networks:
      - privnet
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ privnet_stack_name }}_privnet"
      - "traefik.http.routers.privnet-archivebox.rule=Host(`{{ privnet_archivebox_domain }}`)"
      - "traefik.http.routers.privnet-archivebox.entrypoints=https"
      - "traefik.http.routers.privnet-archivebox.tls=true"
      - "traefik.http.routers.privnet-archivebox.tls.certresolver=privnet-resolver"
      - "traefik.http.routers.privnet-archivebox.service=privnet-archivebox"
      - "traefik.http.services.privnet-archivebox.loadbalancer.server.port=8000"

  sonic:
    image: valeriansaliou/sonic:v1.3.0
    #expose:
    #  - 1491
    networks:
      - privnet
    environment:
      SEARCH_BACKEND_PASSWORD: "{{ privnet_archivebox_sonic_backend_password }}"
    volumes:
      - {{ privnet_config_dir }}/archivebox_sonic/sonic.cfg:/etc/sonic.cfg:ro
      - archivebox_sonic_data:/var/lib/sonic/store

  ### Optional Addons: tweak these examples as needed for your specific use case

  # Example: Run scheduled imports in a docker instead of using cron on the
  # host machine, add tasks and see more info with archivebox schedule --help
  # scheduler:
  #    image: archivebox/archivebox:latest
  #    command: schedule --foreground --every=day --depth=1 'https://getpocket.com/users/USERNAME/feed/all'
  #    environment:
  #        - USE_COLOR=True
  #        - SHOW_PROGRESS=False
  #    volumes:
  #        - ./data:/data

  whoami:
    image: containous/whoami:latest
    networks:
      - privnet
    labels:
      - "traefik.enable=true"
      - "traefik.docker.network={{ privnet_stack_name }}_privnet"
      - "traefik.http.routers.privnet-whoami.rule=Host(`{{ privnet_whoami_domain }}`)"
      - "traefik.http.routers.privnet-whoami.entrypoints=https"
      - "traefik.http.routers.privnet-whoami.tls=true"
      - "traefik.http.routers.privnet-whoami.tls.certresolver=privnet-resolver"
      - "traefik.http.routers.privnet-whoami.service=privnet-whoami"
      - "traefik.http.services.privnet-whoami.loadbalancer.server.port=80"

  balancer:
    image: traefik:2.5
    command: --web --docker --docker.swarmMode --docker.watch --docker.domain={{ privnet_balancer_domain }} --logLevel=DEBUG
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8080:8080/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ privnet_traefik_config_file }}:/traefik.yml:ro"
      - "{{ privnet_traefik_acme_json }}:/acme.json"
      - "{{ privnet_traefik_aws_creds_file }}:/root/.aws/credentials"
    environment:
      - AWS_REGION={{ privnet_acme_aws_region }}
      - AWS_HOSTED_ZONE_ID={{ privnet_acme_aws_zone }}
    labels:
      # Dashboard
      # WARNING: A TRAILING SLASH IS MANDATORY IN THE BROWSER
      # e.g. https://example.com/dashboard/, not merely /dashboard
      - "traefik.http.routers.privnet-traefik-api.rule=Host(`{{ privnet_balancer_domain }}`)&&(PathPrefix(`/api`)||PathPrefix(`/dashboard`)||PathPrefix(`/debug`))"
      - "traefik.http.routers.privnet-traefik-api.service=api@internal"
      - "traefik.http.routers.privnet-traefik-api.tls.certresolver=privnet-resolver"
      - "traefik.http.routers.privnet-traefik-api.entrypoints=https"

      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

      # Without this, traefik can get confused and forward traffic to wrong IPs
      # https://community.traefik.io/t/traefik-routes-to-the-wrong-http-service-ip/5076
      #- "traefik.docker.network={{ privnet_stack_name }}_privnet"

    networks:
      - privnet
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager

volumes:
  giteaweb_data:
    driver: local
  giteadb_data:
    driver: local
  drone_data:
    driver: local
  archivebox_web_data:
    driver: local
  archivebox_sonic_data:
    driver: local
  jenkins_data:
    driver: local
  uptime_kuma_data:
    driver: local

networks:
  privnet:
    driver: overlay
