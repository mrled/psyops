version: '3.7'

services:

  gitea:
    image: gitea/gitea:latest
    environment:
      - USER_UID={{ privnet_gitea_uid }}
      - USER_GID={{ privnet_gitea_gid }}
    networks:
      - dernetverk
    volumes:
      - {{ privnet_gitea_data_dir }}:/data
      - /etc/timezone:/etc/timezone:ro
      - /etc/localtime:/etc/localtime:ro
    ports:
      - "222:22"
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.privnet-gitea.rule=Host(`{{ privnet_gitea_domain }}`)"
      - "traefik.http.routers.privnet-gitea.tls=true"
      - "traefik.http.routers.privnet-gitea.tls.certresolver=privnet-resolver"
      - "traefik.http.routers.privnet-gitea.service=privnet-gitea"
      - "traefik.http.services.privnet-gitea.loadbalancer.server.port=3000"

  whoami:
    image: containous/whoami:latest
    networks:
      - dernetverk
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.privnet-whoami.rule=Host(`{{ privnet_domain }}`) && PathPrefix(`/whoami`)"
      - "traefik.http.routers.privnet-whoami.tls=true"
      - "traefik.http.routers.privnet-whoami.tls.certresolver=privnet-resolver"
      - "traefik.http.routers.privnet-whoami.service=privnet-whoami"
      - "traefik.http.services.privnet-whoami.loadbalancer.server.port=80"

  balancer:
    image: traefik
    command: --web --docker --docker.swarmmode --docker.watch --docker.domain={{ privnet_domain }} --logLevel=DEBUG
    ports:
      - "80:80/tcp"
      - "443:443/tcp"
      - "8080:8080/tcp"
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - "{{ privnet_traefik_config_file }}:/traefik.yml:ro"
      - "{{ privnet_traefik_acme_json }}:/acme.json"
      - "{{ privnet_traefik_aws_creds_file }}:/root/.aws/credentials"
      - "{{ privnet_traefik_api_users_file }}:/traefik-users.htpasswd"
    environment:
      - AWS_REGION={{ privnet_acme_aws_region }}
      - AWS_HOSTED_ZONE_ID={{ privnet_acme_aws_zone }}
    labels:
      # Dashboard
      - "traefik.http.routers.privnet-traefik-api.rule=Host(`{{ privnet_domain }}`)&&(PathPrefix(`/api`)||PathPrefix(`/dashboard`)||PathPrefix(`/debug`))"
      - "traefik.http.routers.privnet-traefik-api.service=api@internal"
      - "traefik.http.routers.privnet-traefik-api.tls.certresolver=privnet-resolver"
      - "traefik.http.routers.privnet-traefik-api.entrypoints=https"
      - "traefik.http.routers.privnet-traefik-api.middlewares=privnet-auth"

      # HTTP basic auth middleware
      - "traefik.http.middlewares.privnet-auth.basicauth.usersfile=/traefik-users.htpasswd"

      # global redirect to https
      - "traefik.http.routers.http-catchall.rule=hostregexp(`{host:.+}`)"
      - "traefik.http.routers.http-catchall.entrypoints=http"
      - "traefik.http.routers.http-catchall.middlewares=redirect-to-https"

      # middleware redirect
      - "traefik.http.middlewares.redirect-to-https.redirectscheme.scheme=https"

    networks:
      - dernetverk
    deploy:
      mode: global
      placement:
        constraints:
          - node.role == manager

networks:
  dernetverk:
    driver: overlay
