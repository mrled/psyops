---

# Note: I have no automated import of the IP address deployed in the micahrl.com root webserver EC2 play
# WHen deploying that instance from scratch, will need to manually update the CFN template for the A record
- name: Configure DNS
  hosts: localhost
  connection: local
  become: no
  gather_facts: no
  roles:
    - name: cfn
      cloudformation_stack_name: MicahrlDotCom
      cloudformation_template_path: cloudformation/MicahrlDotCom.cfn.yml
      cloudformation_capabilities: ['CAPABILITY_NAMED_IAM']
      tags:
        - dns

- name: Deploy micahrl.com root webserver instance to ec2
  hosts: localhost
  connection: local
  become: no
  gather_facts: no
  roles:
    - name: cfn
      cloudformation_stack_name: HttpRootMicahrlDotCom
      cloudformation_template_path: cloudformation/HttpRootMicahrlDotCom.cfn.yml
      cloudformation_tags:
        AnsibleRole: http_root_micahrl_com
      cloudformation_template_params:
        KeyPairName: psyops_rsa
        InstanceType: t2.micro
        InstanceAmiId: ami-0e01ce4ee18447327 # Amazon Linux 2
      tags:
        - http_root_micahrl_com

# Note: I have no automated import of the SSH host key generated in the EC2 deployment phase
# So you'll have to trust that one manually before running this play
- name: Configure deployed micahrl.com root webserver instance
  hosts: http_root_micahrl_com
  roles:
    - { name: http_root_micahrl_com, tags: ['http_root_micahrl_com'] }

- name: Deploy matrix server to EC2
  hosts: localhost
  connection: local
  become: no
  gather_facts: no
  roles:
    - name: cfn
      cloudformation_stack_name: MatrixMicahrlDotCom
      cloudformation_template_path: cloudformation/MatrixMicahrlDotCom.cfn.yml
      cloudformation_tags:
        AnsibleRole: matrixserver
      cloudformation_template_params:
        KeyPairName: psyops_rsa
        InstanceType: t3a.medium
        InstanceAmiId: ami-0fc20dd1da406780b  # Ubuntu 18.04 LTS
        MediaBucketName: "{{ matrix_media_bucket_name }}"
        MediaBucketFullAccessPolicyName: "{{ matrix_media_bucket_full_access_policy_name }}"
        MediaBucketFullAccessGroupName: "{{ matrix_media_bucket_full_access_group_name }}"
      tags:
        - matrixserver

- name: Configure base
  hosts: all
  roles:
    - { name: base, tags: ['base'] }
    - { name: emailfwd, tags: ['emailfwd'] }
    - { name: interactive, tags: ['interactive'], when: interactive }
    - { name: syncthing_personal, tags: ['syncthing'], when: syncthing_personal }
    - { name: capthook, tags: ['capthook'] }

- name: Configure Synology NASes
  hosts: synologynas
  roles:
    - { name: acmedns_remote_host, tags: ['acmedns_remote_host'] }

- name: Configure cloudkey
  hosts: cloudkey
  roles:
    - { name: acmedns_remote_host, tags: ['acmedns_remote_host'] }
    - { name: backup_remote_host, tags: ['backup_remote_host'] }

- name: Deploy wireguard server
  hosts: wireguardservers
  roles:
    - { name: wireguard_server, tags: ['wireguard_server'] }

- name: Deploy pullbackup
  hosts: pullbackup
  roles:
    - { name: mailbackup, tags: ['mailbackup'] }
    - { name: backup_unifi, tags: ['backup_unifi'] }

- name: Deploy syslog server
  hosts: syslogserver
  roles:
    - { name: sysloghost, tags: ['sysloghost'] }

- name: Deploy ACME DNS base
  hosts: acmednsupdaters
  roles:
    - { name: acmedns_base, tags: ['acmedns_base'] }
    - { name: acmedns_syno_updater, tags: ['acmedns_syno_updater'] }
    # acmedns_cloudkey_updater is broken :(
    - { name: acmedns_cloudkey_updater, tags: ['acmedns_cloudkey_updater'] }

- name: Deploy Plex
  hosts: plexservers
  roles:
    - { name: plexserver, tags: ['plexserver'] }

- name: Deploy seedbox
  hosts: seedboxes
  roles:
    - { name: seedbox, tags: ['seedbox'] }

#- name: Deploy Unifi gateway config files
#  hosts: unifiusg
#  tasks:
#    - debug: msg="Deploying Unifi gateway on {{ inventory_hostname }}"
#  roles:
#    - { name: unifi_usg, tags: ['unifi_usg'] }

#- name: Deploy Unifi controller config
#  hosts: unificontrollers
#  roles:
#    - { name: unifi_controller, tags: ['unifi_controller'] }

#- name: Deploy Algo gateawy
#  hosts: algogateway
#  roles:
#    - { name: algo_gateway, tags: ['algo_gateway'] }
