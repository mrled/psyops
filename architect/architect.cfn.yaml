AWSTemplateFormatVersion: 2010-09-09
Description: >-
  Architect is my CI server

Parameters:
  KeyName:
    Description: Name of an existing EC2 KeyPair to enable SSH access to the instances
    Type: 'AWS::EC2::KeyPair::KeyName'
    ConstraintDescription: must be the name of an existing EC2 KeyPair.
  InstanceType:
    Description: CI EC2 instance type
    Type: String
    Default: t2.micro
    ConstraintDescription: must be a valid EC2 instance type.

# TODO: Can Mappings be defined in a separate CFN template?

Mappings:
  AWSInstanceType2Arch:
    t2.micro:
      Arch: HVM64
  AWSInstanceType2NATArch:
    t2.micro:
      Arch: NATHVM64
  # TODO: 
  AWSRegionArch2AMI:
    us-west-2:
      PV64: ami-7f77b31f
      HVM64: ami-7172b611
      HVMG2: ami-be4ea3c6

Resources:
  ArchitectInstance:
    Type: 'AWS::EC2::Instance'
    Metadata:
      'AWS::CloudFormation::Init':
        configSets:
          setup_architect:
            - install_docker

        install_docker:
          commands:
            01_update_apt:
              command: "apt-get update"
              test: "false"
            02_install_prereqs:
              command: "apt-get -y install apt-transport-https ca-certificates curl software-properties-common"
              test: "false"
            03_install_docker_gpg_key:
              command: "curl -fsSL https://download.docker.com/linux/ubuntu/gpg | sudo apt-key add -"
              test: "apt-key fingerprint | grep -q '0EBFCD88'"
            04_add_docker_apt_repo:
              command: "sudo add-apt-repository 'deb [arch=amd64] https://download.docker.com/linux/ubuntu $(lsb_release -cs) stable"
              test: "find /etc/apt -name \*.list -exec grep -q 'download.docker.com' {} \;"
            05_update_apt_again:
              command: "apt-get update"
              test: "false"
            06_install_docker:
              command: "apt-get -y install docker-ce"
              test: "false"

    Properties:
      ImageId: !FindInMap 
        - AWSRegionArch2AMI
        - !Ref 'AWS::Region'
        - !FindInMap 
          - AWSInstanceType2Arch
          - !Ref InstanceType
          - Arch
      InstanceType: !Ref InstanceType
      SecurityGroups:
        - !Ref WebServerSecurityGroup
      KeyName: !Ref KeyName
      UserData: !Base64 
        'Fn::Join':
          - ''
          - - |
              #!/bin/bash -xe
            - |
              yum update -y aws-cfn-bootstrap
            - '/opt/aws/bin/cfn-init -v '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServer '
            - '         --configsets wordpress_install '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

            - '/opt/aws/bin/cfn-signal -e $? '
            - '         --stack '
            - !Ref 'AWS::StackName'
            - '         --resource WebServer '
            - '         --region '
            - !Ref 'AWS::Region'
            - |+

    CreationPolicy:
      ResourceSignal:
        Timeout: PT15M
Outputs:
  WebsiteURL:
    Value: !Join 
      - ''
      - - 'http://'
        - !GetAtt 
          - WebServer
          - PublicDnsName
        - /wordpress
    Description: WordPress Website
