# Patch the argowf-artifacts Secret to allow reflection
#
# This Secret is originally created by the ObjectBucketClaim,
# and it contains a keyId and secretKey for the bucket.
#
# Argo Workflows requires the secret to run in the namespace where the workflow is running.
# All namespaces the run workflows must have a copy of this secret.
#
# I thought there was a way to create multiple OBCs for the same bucket,
# but I couldn't make it work.
# <https://github.com/rook/rook/issues/8034>
# <https://github.com/rook/rook/issues/12261>
# This is a workaround.
apiVersion: batch/v1
kind: Job
metadata:
  name: reflect-argowf-artifacts-secret
  namespace: argowf
spec:
  template:
    spec:
      serviceAccountName: reflect-argowf-artifacts-secret-sa
      containers:
        - name: kubectl
          image: bitnami/kubectl
          command:
            - /bin/sh
            - -c
            - |
              # Create the patch file
              cat <<EOF > /tmp/patch.yaml
              {
                "metadata": {
                  "annotations": {
                    "reflector.v1.k8s.emberstack.com/reflection-allowed": "true",
                    "reflector.v1.k8s.emberstack.com/reflection-allowed-namespaces": "datadump",
                    "reflector.v1.k8s.emberstack.com/reflection-auto-enabled": "true",
                    "reflector.v1.k8s.emberstack.com/reflection-auto-namespaces": ""
                  }
                }
              }
              EOF

              # Wait for the secret to be created
              while ! kubectl get secret argowf-artifacts -n argowf; do
                sleep 2
              done

              # Patch the secret
              kubectl patch secret argowf-artifacts -n argowf --type=merge --patch-file=/tmp/patch.yaml
      restartPolicy: OnFailure
