apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: python-knpl-macrofactor
  namespace: argowf
spec:
  entrypoint: build-and-push-python
  serviceAccountName: argowf-executor

  volumeClaimTemplates:
    - metadata:
        name: workspace
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
        storageClassName: cephalopodblk-nvme-2rep

  volumes:
    - name: argowf-ssh
      secret:
        secretName: argowf-ssh
    - name: gitea-ssh-host-keys-pub
      configMap:
        name: gitea-ssh-host-keys-pub

  templates:
    - name: build-and-push-python
      steps:
        - - name: checkout
            template: checkout-repo
        - - name: build
            template: build-package
        - - name: push
            template: push-package

    # Step 1: Checkout from Gitea
    - name: checkout-repo
      container:
        image: alpine/git
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -eux
            whoami
            mkdir -p ~/.ssh
            echo "gitea.micahrl.me $(cat /gitea-ssh-host-keys-pub/gitea.ed25519.pub)" > ~/.ssh/known_hosts
            cp /ssh/identity ~/.ssh/identity
            chmod 0600 ~/.ssh/identity
            git clone git@gitea.micahrl.me:kubernasty/psyops.git /workspace/psyops
        env:
          - name: GIT_SSH_COMMAND
            value: "ssh -i $HOME/.ssh/identity -o StrictHostKeyChecking=yes"
        volumeMounts:
          - name: workspace
            mountPath: /workspace
          - name: argowf-ssh
            mountPath: /ssh
          - name: gitea-ssh-host-keys-pub
            mountPath: /gitea-ssh-host-keys-pub

    # Step 2: Build the Python package with 'uv'
    - name: build-package
      container:
        image: ghcr.io/astral-sh/uv:debian
        command: ["sh", "-c"]
        args:
          - |
            set -eux
            cd /workspace/psyops/pipelines/macrofactor
            export KNPL_MACROFACTOR_BUILD_VERSION="$(uv run ./buildver.py)"
            uv build
            ls -alF dist/
        volumeMounts:
          - name: workspace
            mountPath: /workspace

    # Step 3: Publish the package to Gitea PyPI
    - name: push-package
      container:
        image: ghcr.io/astral-sh/uv:debian
        command: ["sh", "-c"]
        args:
          - |
            set -eux
            cd /workspace/psyops/pipelines/macrofactor
            ls -alF dist/
            uv publish dist/*.whl
        env:
          - name: UV_PUBLISH_URL
            # The gitea service is headless so we have to use the pod's listening port
            value: http://gitea.gitea.svc.cluster.local:3000/api/packages/kubernasty/pypi
          - name: UV_PUBLISH_USERNAME
            valueFrom:
              secretKeyRef:
                name: gitea-workflowexec-user
                key: username
          - name: UV_PUBLISH_PASSWORD
            valueFrom:
              secretKeyRef:
                name: gitea-workflowexec-user
                key: password
        volumeMounts:
          - name: workspace
            mountPath: /workspace
