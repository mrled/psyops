apiVersion: argoproj.io/v1alpha1
kind: WorkflowTemplate
metadata:
  name: build-labnotes
  namespace: argowf
spec:
  serviceAccountName: argowf-executor
  entrypoint: main
  ttlStrategy:
    secondsAfterSuccess: 3600 # 1h
    secondsAfterFailure: 86400 # 24h

  volumeClaimTemplates:
    - metadata:
        name: workspace
      spec:
        accessModes: ["ReadWriteOnce"]
        resources:
          requests:
            storage: 1Gi
        storageClassName: cephalopodblk-nvme-2rep

  volumes:
    - name: argowf-ssh
      secret:
        secretName: argowf-ssh
    - name: gitea-ssh-host-keys-pub
      configMap:
        name: gitea-ssh-host-keys-pub
    - name: gitea-registry-creds-workflowexec
      secret:
        secretName: gitea-registry-creds-workflowexec
    - name: build-labnotes-files
      configMap:
        name: build-labnotes-files

  templates:
    - name: main
      dag:
        tasks:
          - name: checkout
            template: checkout
          - name: build-hugo
            template: build-hugo
            dependencies: [checkout]
          - name: build-push-docker
            template: build-push-docker
            dependencies: [build-hugo]
          - name: deploy-pods
            template: deploy-pods
            dependencies: [build-push-docker]

    # Checkout from Gitea
    - name: checkout
      # Must be run as the same user as the build-hugo step.
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      container:
        image: alpine/git
        command: ["/bin/sh", "-c"]
        args:
          - |
            set -eux
            whoami
            umask 077
            export HOME=/tmp/home
            mkdir -p $HOME/.ssh
            echo "gitea.micahrl.me $(cat /gitea-ssh-host-keys-pub/gitea.ed25519.pub)" > $HOME/.ssh/known_hosts
            cp /ssh/identity $HOME/.ssh/identity
            chmod 0600 $HOME/.ssh/identity
            umask 022
            git clone git@gitea.micahrl.me:kubernasty/psyops.git /workspace/psyops
        env:
          - name: GIT_SSH_COMMAND
            value: "ssh -i /tmp/home/.ssh/identity -o StrictHostKeyChecking=yes"
        volumeMounts:
          - name: workspace
            mountPath: /workspace
          - name: argowf-ssh
            mountPath: /ssh
          - name: gitea-ssh-host-keys-pub
            mountPath: /gitea-ssh-host-keys-pub
          # Mount a passwd file so the user properly exists in the container
          - name: build-labnotes-files
            mountPath: /etc/passwd
            subPath: passwd

    # Build the site with Hugo
    - name: build-hugo
      # Must run as the same user as the checkout step,
      # or else Git (which Hugo runs) will complain
      # about the permissions of the /workspace/psyops directory.
      securityContext:
        runAsUser: 1000
        runAsGroup: 1000
        fsGroup: 1000
      container:
        image: hugomods/hugo:ci-non-root
        args:
          - build
          - --source
          - /workspace/psyops/kubernasty/labnotes
          - --environment
          - kubernasty
        volumeMounts:
          - name: workspace
            mountPath: /workspace

    # Build the Docker image
    # This always pushes the latest, which is fine for this container,
    # and has the upside of not needing a cleanup policy.
    - name: build-push-docker
      container:
        image: gcr.io/kaniko-project/executor:latest
        # Kaniko has to run as root
        securityContext:
          runAsUser: 0
          runAsGroup: 0
        args:
          - "--dockerfile=/workspace/psyops/kubernasty/labnotes/public/Dockerfile"
          - "--context=/workspace/psyops/kubernasty/labnotes/public"
          - "--destination=gitea.micahrl.me/kubernasty/labnotes:latest"
        volumeMounts:
          - name: workspace
            mountPath: /workspace
          - name: gitea-registry-creds-workflowexec
            subPath: .dockerconfigjson
            mountPath: /kaniko/.docker/config.json

    # Redeploy the labnotes service
    - name: deploy-pods
      container:
        image: bitnami/kubectl:latest
        command: [/bin/sh, -c]
        args:
          - |+
            set -eux
            kubectl rollout restart deployment labnotes -n labnotes
