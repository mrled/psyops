# Source: authelia/templates/configMap.yaml
apiVersion: v1
kind: ConfigMap
metadata:
  name: authelia
  namespace: authelia
  labels:
    app.kubernetes.io/name: authelia
data:
  configuration.yaml: |
    ---
    theme: auto
    certificates_directory: /certificates
    default_2fa_method: 'webauthn'
    server:
      address: tcp://0.0.0.0:9091
      asset_path: ''
      headers:
        csp_template: ''
      buffers:
        read: 4096
        write: 4096
      timeouts:
        read: 6s
        write: 6s
        idle: 30s
      endpoints:
        enable_expvars: false
        enable_pprof: false
        authz:
          forward-auth:
            implementation: 'ForwardAuth'

    log:
      # authelia recommends not using trace in production
      level: debug
      # level: trace
      format: text
      file_path: ''
      keep_stdout: true

    totp:
      disable: false
      issuer: micahrl.me
      algorithm: sha1
      digits: 6
      period: 30
      skew: 1
      secret_size: 32
    webauthn:
      disable: false
      display_name: micahrl.me
      attestation_conveyance_preference: indirect
      user_verification: preferred
      timeout: 60s
    ntp:
      address: time.cloudflare.com:123
      version: 4
      max_desync: 3s
      disable_startup_check: false
      disable_failure: false

    authentication_backend:
      ldap:
        address: ldaps://dirsrv.directory.svc.cluster.local
        timeout: 5s
        start_tls: false
        base_dn: dc=micahrl,dc=me
        additional_users_dn: ou=people
        additional_groups_dn: ou=groups
        permit_referrals: false
        permit_unauthenticated_bind: false
        permit_feature_detection_failure: false
        user: uid=authelia,ou=services,dc=micahrl,dc=me
        # https://www.authelia.com/reference/guides/ldap/#attribute-defaults
        users_filter: (&(|({username_attribute}={input})({mail_attribute}={input}))(|(objectClass=inetOrgPerson)(objectClass=organizationalPerson))(!(pwdReset=TRUE)))
        groups_filter: (&(|(member={dn})(uniqueMember={dn}))(|(objectClass=groupOfNames)(objectClass=groupOfUniqueNames)(objectClass=groupOfMembers)))
        attributes:
          username: uid
          mail: mail
          display_name: cn
          member_of: memberOf
          group_name: cn

    password_policy:
      standard:
        enabled: false
        min_length: 8
        max_length: 0
        require_uppercase: true
        require_lowercase: true
        require_number: true
        require_special: true
      zxcvbn:
        enabled: false
        min_score: 0
    session:
      name: 'authelia_session'
      same_site: 'lax'
      # How long the user can be inactive before the session is invalidated.
      inactivity: 48h
      # How long before an active session is invalidated, when the remember me box is NOT checked
      expiration: 24h
      # How long before an active session is invalidated, when the remember me box IS checked
      remember_me: 6mo
      cookies:
        - domain: 'micahrl.me'
          authelia_url: 'https://auth.micahrl.me'
          default_redirection_url: 'https://kubernasty.micahrl.me'
      redis:
        host: redict
        port: 6379
        username: authelia
    regulation:
      ban_time: 5m
      find_time: 2m
      max_retries: 3
    storage:
      postgres:
        address: tcp://autheliapg-2rep-rw:5432
        database: authelia
        schema: public
        username: authelia
        timeout: 5s
    notifier:
      disable_startup_check: false
      smtp:
        address: submissions://smtp.fastmail.com:465
        timeout: 5s
        username: mrled@fastmail.com
        sender: authelia@micahrl.me
        identifier: authelia
        subject: '[Authelia] {title}'
        startup_check_address: test@authelia.com
        disable_html_emails: false
        disable_require_tls: false
        disable_starttls: false

    # Access control for domains (and paths).
    # *** REQUIRES THE INGRESS/ROUTE USING THE AUTHELIA MIDDLEWARE ***
    # These rules do not magically apply to all ingress/route resources.
    access_control:
      # Any domain not listed here will be denied by default.
      # AGAIN, THIS WILL DO NOTHING UNLESS THE INGRESS/ROUTE USES THE AUTHELIA MIDDLEWARE.
      default_policy: deny
      # Rules are applied in order - an early match means later rules are not evaluated.
      # Note that for each rule, the policy is what to do, and *everything else* is the criteria for the policy.
      # In particular, setting a subject means that the policy only applies to that subject --
      # NOT that the domains/paths are only allowed for that subject.
      rules:
        # Require 2FA and patricii membership for these domains.
        - domain:
            - traefik.micahrl.me
            - kubernetes.micahrl.me
            - cephalopod.micahrl.me
            - directory.micahrl.me
          policy: two_factor
          subject:
            - "group:patricii"
        # Require 2FA and any login for these domains.
        - domain:
            - kubernasty.micahrl.me
            - whoami-authenticated.micahrl.me
          policy: two_factor
        # Require specific group membership for these domains
        - domain:
            - gitea.micahrl.me
          policy: two_factor
          subject:
            - "group:totalgits"
        # Do not require login for these domains.
        # (Kind of useless, might as well just not protect them at all.)
        - domain:
            - whoami-unauthenticated.micahrl.me
          policy: bypass

    identity_providers:

      oidc:
        # hmac_secret: see OIDC_HMAC_SECRET
        jwks:
          - key: {{ secret "/secrets/JWKS_PRIMARY_RSA_PRIVATE_KEY" | mindent 10 "|" | msquote }}
        authorization_policies:
          patricii:
            # Require membership in the patricii group.
            default_policy: deny
            rules:
              - policy: two_factor
                subject: "group:patricii"

        clients:

          - client_name: Gitea
            client_id: ka2aiDilaineezaT7oob5eej
            client_secret: {{ secret "/secrets/OIDIC_CLIENT_SECRET_GITEA" }}
            redirect_uris:
              - https://gitea.micahrl.me/user/oauth2/authelia/callback
            scopes:
              - openid
              - email
              - profile
            authorization_policy: two_factor

          - client_name: Kubernetes
            client_id: kubernasty-controlplane
            client_secret: {{ secret "/secrets/OIDIC_CLIENT_SECRET_KUBERNASTY" }}
            redirect_uris:
              # This is required to work with `kubectl oidc-login` from <https://github.com/int128/kubelogin>
              - http://localhost:8000
              # Used when debugging with oauth2-proxy
              - http://localhost:8000/oauth2/callback
              # Used for the kubernetes dashboard
              - https://kubernetes.micahrl.me/oauth2/callback
            scopes:
              - openid
              - email
              - profile
              - groups
              - offline_access
            authorization_policy: patricii

          - client_name: Argo CD
            client_id: argocd
            client_secret: {{ secret "/secrets/OIDC_CLIENT_SECRET_ARGOCD" }}
            public: false
            authorization_policy: two_factor
            redirect_uris:
              - https://argocd.micahrl.me/auth/callback
            scopes:
              - openid
              - email
              - profile
              - groups
            userinfo_signed_response_alg: none
          - client_name: Argo CD cli
            client_id: argocd-cli
            public: true
            authorization_policy: two_factor
            redirect_uris:
              - http://localhost:8085/auth/callback
            scopes:
              - openid
              - email
              - profile
              - groups
              - offline_access
            userinfo_signed_response_alg: none

          # https://argo-workflows.readthedocs.io/en/latest/argo-server-sso/
          - client_name: Argo Workflows
            client_id: argowf
            client_secret: {{ secret "/secrets/OIDC_CLIENT_SECRET_ARGOWF" }}
            public: false
            authorization_policy: two_factor
            redirect_uris:
              - https://argowf.micahrl.me/oauth2/callback
            scopes:
              - openid
              - email
              - profile
              - groups
            userinfo_signed_response_alg: none

    # portal:
    #   url: https://auth.micahrl.me
    ...
