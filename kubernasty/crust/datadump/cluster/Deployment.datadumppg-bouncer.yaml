apiVersion: apps/v1
kind: Deployment
metadata:
  name: datadumppg-bouncer
  namespace: datadump
spec:
  replicas: 1
  selector:
    matchLabels:
      app: datadumppg-bouncer
  template:
    metadata:
      labels:
        app: datadumppg-bouncer

    spec:
      volumes:
        - name: wildcard-tls
          secret:
            secretName: kubernasty-wildcard-backing-secret # <-- A Secret containing tls.crt, tls.key, ca.crt

      containers:
        - name: pgbouncer
          image: bitnami/pgbouncer:latest
          ports:
            - containerPort: 6432
              name: wildcard-tls
          env:
            - name: PGBOUNCER_LISTEN_ADDRESS
              value: "0.0.0.0"
            # This is the default pgbouncer port
            - name: PGBOUNCER_LISTEN_PORT
              value: "6432"

            # Require that incoming connections to PgBouncer use TLS
            - name: PGBOUNCER_CLIENT_TLS_SSLMODE
              value: require
            - name: PGBOUNCER_CLIENT_TLS_CERT_FILE
              value: "/etc/pgbouncer/tls/tls.crt"
            - name: PGBOUNCER_CLIENT_TLS_KEY_FILE
              value: "/etc/pgbouncer/tls/tls.key"

            # Do not attempt to connect to the upstream server using TLS
            # (Setting this to allow or prefer results in an error as the CA cannot be verified)
            - name: PGBOUNCER_SERVER_TLS_SSLMODE
              value: disable

            - name: PGBOUNCER_AUTH_TYPE
              value: "scram-sha-256"

            # For the default database, values to connect to
            - name: POSTGRESQL_HOST
              value: "datadumppg-rw.datadump.svc.cluster.local"
            - name: POSTGRESQL_PORT
              value: "5432"
            - name: POSTGRESQL_DATABASE
              value: "datadump"

            # The name of the default pgbouncer database
            - name: PGBOUNCER_DATABASE
              value: "datadump"

            # The scripts build a config file with a [database] entry like this:
            # $PGBOUNCER_DATABASE=host=$POSTGRESQL_HOST port=$POSTGRESQL_PORT dbname=$POSTGRESQL_DATABASE auth_user=$PGBOUNCER_AUTH_USER

            # For dynamic user auth, define the special user & auth query
            - name: PGBOUNCER_AUTH_USER
              value: "pgbouncer"
            - name: PGBOUNCER_AUTH_QUERY
              value: "SELECT username, password FROM pgbouncer.get_auth($1)"

            # This is PgBouncer's own default connection user/password
            # Must match the 'pgbouncer' role you created (inheriting from pgbouncer_auth).
            - name: POSTGRESQL_USERNAME
              valueFrom:
                secretKeyRef:
                  name: pg-user-pgbouncer
                  key: username
            - name: POSTGRESQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: pg-user-pgbouncer
                  key: password

          volumeMounts:
            - name: wildcard-tls
              mountPath: /etc/pgbouncer/tls
              readOnly: true
