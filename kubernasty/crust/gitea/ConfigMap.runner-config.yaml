apiVersion: v1
kind: ConfigMap
metadata:
  name: runner-config
  namespace: gitea

data:

  config.yaml: |+
    # Generate the example config file with
    # docker run --entrypoint="" -it --rm gitea/act_runner:latest act_runner generate-config

    log:
      # The level of logging, can be trace, debug, info, warn, error, fatal
      level: debug

    runner:
      # Where to store the registration result.
      file: .runner
      # Execute how many tasks concurrently at the same time.
      capacity: 5
      # Extra environment variables to run jobs.

      # envs:
      #   A_TEST_ENV_NAME_1: a_test_env_value_1
      #   A_TEST_ENV_NAME_2: a_test_env_value_2
      # # Extra environment variables to run jobs from a file.
      # # It will be ignored if it's empty or the file doesn't exist.
      # env_file: .env

      # The timeout for a job to be finished.
      # Please note that the Gitea instance also has a timeout (3h by default) for the job.
      # So the job could be stopped by the Gitea instance if it's timeout is shorter than this.
      timeout: 3h

      # Skip TLS verify of Gitea instance, we are using Kubernetes with wireguard
      insecure: true

      # The timeout for fetching the job from the Gitea instance.
      fetch_timeout: 5s
      # The interval for fetching the job from the Gitea instance.
      fetch_interval: 2s

      # The labels of a runner are used to determine which jobs the runner can run, and how to run them.
      # Like: "macos-arm64:host" or "ubuntu-latest:docker://gitea/runner-images:ubuntu-latest"
      # Find more images provided by Gitea at https://gitea.com/gitea/runner-images .
      # If it's empty when registering, it will ask for inputting labels.
      # If it's empty when execute `daemon`, will use labels in `.runner` file.
      labels:
        - "linux-amd64:host"
        - "ubuntu-latest:docker://gitea/runner-images:ubuntu-latest"
        - "ubuntu-22.04:docker://gitea/runner-images:ubuntu-22.04"
        - "ubuntu-20.04:docker://gitea/runner-images:ubuntu-20.04"
        - "busybox:docker://busybox"
        - "alpine-latest:docker://alpine:latest"

    # cache:
    #   # Enable cache server to use actions/cache.
    #   enabled: true
    #   # The directory to store the cache data.
    #   # If it's empty, the cache data will be stored in $HOME/.cache/actcache.
    #   dir: ""
    #   # The host of the cache server.
    #   # It's not for the address to listen, but the address to connect from job containers.
    #   # So 0.0.0.0 is a bad choice, leave it empty to detect automatically.
    #   host: ""
    #   # The port of the cache server.
    #   # 0 means to use a random available port.
    #   port: 0
    #   # The external cache server URL. Valid only when enable is true.
    #   # If it's specified, act_runner will use this URL as the ACTIONS_CACHE_URL rather than start a server by itself.
    #   # The URL should generally end with "/".
    #   external_server: ""

    container:
      # Specifies the network to which the container will connect.
      # Could be host, bridge or the name of a custom network.
      # If it's empty, act_runner will create a network automatically.
      network: ""
      # Whether to use privileged mode or not when launching task containers (privileged mode is required for Docker-in-Docker).
      privileged: true

      # And other options to be used when the container is started (eg, --add-host=my.gitea.url:host-gateway).
      #
      # When running in Kubernetes, we need to add the /sys volume to the container,
      # otherwise we get errors like
      # error during container init: error mounting "sysfs" to rootfs at "/sys": mount sysfs:/sys (via /proc/self/fd/6), flags: 0xe: operation not permitted: unknown
      # Lots of discussion of this here:
      # <https://gitea.com/gitea/act_runner/issues/280>
      options: --volume=/sys:/sys

      # The parent directory of a job's working directory.
      # NOTE: There is no need to add the first '/' of the path as act_runner will add it automatically.
      # If the path starts with '/', the '/' will be trimmed.
      # For example, if the parent directory is /path/to/my/dir, workdir_parent should be path/to/my/dir
      # If it's empty, /workspace will be used.
      workdir_parent:

      # Volumes (including bind mounts) can be mounted to containers. Glob syntax is supported, see https://github.com/gobwas/glob
      # You can specify multiple volumes. If the sequence is empty, no volumes can be mounted.
      # For example, if you only allow containers to mount the `data` volume and all the json files in `/src`, you should change the config to:
      # valid_volumes:
      #   - data
      #   - /src/*.json
      # If you want to allow any volume, please use the following configuration:
      valid_volumes:
        - '**'
      # valid_volumes: []

      # I think the container should be able to find this even if the value is "",
      # but that doesn't seem to be the case.
      # The act_runner dind image creates a docket at this path.
      docker_host: "unix:///run/user/1000/docker.sock"

      # Pull docker image(s) even if already present
      force_pull: false
      # Rebuild docker image(s) even if already present
      force_rebuild: false

    host:
      # The parent directory of a job's working directory.
      # If it's empty, $HOME/.cache/act/ will be used.
      workdir_parent:
