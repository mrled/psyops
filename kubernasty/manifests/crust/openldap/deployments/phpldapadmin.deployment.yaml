apiVersion: apps/v1
kind: Deployment
metadata:
  name: phpldapadmin
  namespace: openldap
  labels:
    app.kubernetes.io/name: phpldapadmin
spec:
  selector:
    matchLabels:
      app.kubernetes.io/name: phpldapadmin
  replicas: 1
  template:
    metadata:
      labels:
        app.kubernetes.io/name: phpldapadmin
    spec:
      initContainers:
        # We must let phpldapadmin chown the certificate,
        # and mounting a secret as a volume doesn't allow that.
        # AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAA
        # So we'll copy it to a place where it can chown it when it starts.
        - name: volume-permissions
          image: alpine:latest
          command: ["/bin/sh", "-c"]
          # WARNING: MAKE SURE ALL LINES ARE TERMINATED WITH A SEMICOLON.
          # The YAML parser turns this into a string, and turns newlines into spaces.
          # This means we have to insert semicolons and cannot rely on newlines here to terminate commands.
          args:
            - |+
              mkdir -p /secrets/openldap-tls
              chown 1001 /secrets/openldap-tls
              chmod 0700 /secrets/openldap-tls
              cp /mnt/openldap-cert/certificate /mnt/permissioned-config/certificate
              chmod 666 /mnt/permissioned-config/certificate
          volumeMounts:
            - name: openldap-cert-vol
              mountPath: /mnt/openldap-cert
              readOnly: true
            - name: permissioned-config-vol
              mountPath: /mnt/permissioned-config
              readOnly: false
      containers:
        - name: phpldapadmin
          # image: docker.io/nginx:latest
          image: docker.io/osixia/phpldapadmin:0.9.0
          imagePullPolicy: "Always"
          env:
            # what the FUCK is #PYTHON2BASH ???
            # Apparently it's some osixia fucking special magic built in to the base docker container??? fuck you
            - name: PHPLDAPADMIN_LDAP_HOSTS
              # note: "openldap" is the hostname (inside the cluster)
              value: "#PYTHON2BASH:[{'openldap': [{'server': [{'tls': True}, {'port': 636}] }] }]"
            # This is required bc Traefik terminates SSL
            - name: PHPLDAPADMIN_TRUST_PROXY_SSL
              value: "true"
            # Do not enable in-container HTTPS server; just serve over HTTP and let Traefik terminate SSL
            - name: PHPLDAPADMIN_HTTPS
              value: "false"
            # Connect to the LDAP server over TLS
            - name: PHPLDAPADMIN_LDAP_CLIENT_TLS
              value: "true"
            # Use this as the CA cert for the LDAP server TLS.
            # (Our LDAP server is self-signed so we just use the certificate here.)
            # This value is RELATIVE TO /container/service/ldap-client/assets/certs/openldap-cert ON THE CONTAINER.
            - name: PHPLDAPADMIN_LDAP_CLIENT_TLS_CA_CRT_FILENAME
              value: permissioned-config/certificate
          ports:
            - name: phpldapweb
              containerPort: 80
          volumeMounts:
            - name: permissioned-config-vol
              mountPath: /container/service/ldap-client/assets/certs/permissioned-config
      volumes:
        - name: openldap-cert-vol
          configMap:
            name: openldap-cert
        - name: permissioned-config-vol
          persistentVolumeClaim:
            claimName: phpldapadmin-permissioned-config-claim